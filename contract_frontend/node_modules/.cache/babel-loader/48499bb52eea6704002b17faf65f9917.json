{"ast":null,"code":"import _objectSpread from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/src/pages/vendors/add_vendor/components/FormFields/SelectUserField.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { at } from 'lodash';\nimport { useField } from 'formik';\nimport { InputLabel, FormControl, Select, MenuItem, FormHelperText } from '@material-ui/core';\n\nfunction SelectField(props) {\n  _s();\n\n  var _this = this;\n\n  var label = props.label,\n      data = props.data,\n      rest = _objectWithoutProperties(props, [\"label\", \"data\"]);\n\n  var _useField = useField(props),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      meta = _useField2[1];\n\n  var selectedValue = field.value;\n\n  var _at = at(meta, 'touched', 'error'),\n      _at2 = _slicedToArray(_at, 2),\n      touched = _at2[0],\n      error = _at2[1];\n\n  var isError = touched && error && true;\n\n  function _renderHelperText() {\n    if (isError) {\n      return /*#__PURE__*/_jsxDEV(FormHelperText, {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(FormControl, _objectSpread(_objectSpread({}, rest), {}, {\n    error: isError,\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, _objectSpread(_objectSpread({}, field), {}, {\n      value: selectedValue ? selectedValue : '',\n      children: data.map(function (item, index) {\n        return /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: item.id,\n          children: item.user_name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, _this);\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), _renderHelperText()]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SelectField, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = SelectField;\nSelectField.defaultProps = {\n  data: []\n};\nSelectField.propTypes = {\n  data: PropTypes.array.isRequired\n};\nexport default SelectField;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectField\");","map":{"version":3,"sources":["/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/src/pages/vendors/add_vendor/components/FormFields/SelectUserField.jsx"],"names":["React","PropTypes","at","useField","InputLabel","FormControl","Select","MenuItem","FormHelperText","SelectField","props","label","data","rest","field","meta","selectedValue","value","touched","error","isError","_renderHelperText","map","item","index","id","user_name","defaultProps","propTypes","array","isRequired"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,EAAT,QAAmB,QAAnB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SACIC,UADJ,EAEIC,WAFJ,EAGIC,MAHJ,EAIIC,QAJJ,EAKIC,cALJ,QAMO,mBANP;;AAQA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAAA;;AAAA,MAChBC,KADgB,GACSD,KADT,CAChBC,KADgB;AAAA,MACTC,IADS,GACSF,KADT,CACTE,IADS;AAAA,MACAC,IADA,4BACSH,KADT;;AAAA,kBAEFP,QAAQ,CAACO,KAAD,CAFN;AAAA;AAAA,MAEjBI,KAFiB;AAAA,MAEVC,IAFU;;AAAA,MAGTC,aAHS,GAGSF,KAHT,CAGhBG,KAHgB;;AAAA,YAICf,EAAE,CAACa,IAAD,EAAO,SAAP,EAAkB,OAAlB,CAJH;AAAA;AAAA,MAIjBG,OAJiB;AAAA,MAIRC,KAJQ;;AAKxB,MAAMC,OAAO,GAAGF,OAAO,IAAIC,KAAX,IAAoB,IAApC;;AACA,WAASE,iBAAT,GAA6B;AACzB,QAAID,OAAJ,EAAa;AACT,0BAAO,QAAC,cAAD;AAAA,kBAAiBD;AAAjB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ;;AAED,sBACI,QAAC,WAAD,kCAAiBN,IAAjB;AAAuB,IAAA,KAAK,EAAEO,OAA9B;AAAA,4BACI,QAAC,UAAD;AAAA,gBAAaT;AAAb;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD,kCAAYG,KAAZ;AAAmB,MAAA,KAAK,EAAEE,aAAa,GAAGA,aAAH,GAAmB,EAA1D;AAAA,gBACKJ,IAAI,CAACU,GAAL,CAAS,UAACC,IAAD,EAAOC,KAAP;AAAA,4BACN,QAAC,QAAD;AAAsB,UAAA,KAAK,EAAED,IAAI,CAACE,EAAlC;AAAA,oBACKF,IAAI,CAACG;AADV,WAAeF,KAAf;AAAA;AAAA;AAAA;AAAA,iBADM;AAAA,OAAT;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ,EASKH,iBAAiB,EATtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAzBQZ,W;UAEiBN,Q;;;KAFjBM,W;AA2BTA,WAAW,CAACkB,YAAZ,GAA2B;AACvBf,EAAAA,IAAI,EAAE;AADiB,CAA3B;AAIAH,WAAW,CAACmB,SAAZ,GAAwB;AACpBhB,EAAAA,IAAI,EAAEX,SAAS,CAAC4B,KAAV,CAAgBC;AADF,CAAxB;AAIA,eAAerB,WAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { at } from 'lodash';\nimport { useField } from 'formik';\nimport {\n    InputLabel,\n    FormControl,\n    Select,\n    MenuItem,\n    FormHelperText\n} from '@material-ui/core';\n\nfunction SelectField(props) {\n    const { label, data, ...rest } = props;\n    const [field, meta] = useField(props);\n    const { value: selectedValue } = field;\n    const [touched, error] = at(meta, 'touched', 'error');\n    const isError = touched && error && true;\n    function _renderHelperText() {\n        if (isError) {\n            return <FormHelperText>{error}</FormHelperText>;\n        }\n    }\n\n    return (\n        <FormControl {...rest} error={isError}>\n            <InputLabel>{label}</InputLabel>\n            <Select {...field} value={selectedValue ? selectedValue : ''}>\n                {data.map((item, index) => (\n                    <MenuItem key={index} value={item.id}>\n                        {item.user_name}\n                    </MenuItem>\n                ))}\n            </Select>\n            {_renderHelperText()}\n        </FormControl>\n    );\n}\n\nSelectField.defaultProps = {\n    data: []\n};\n\nSelectField.propTypes = {\n    data: PropTypes.array.isRequired\n};\n\nexport default SelectField;\n"]},"metadata":{},"sourceType":"module"}