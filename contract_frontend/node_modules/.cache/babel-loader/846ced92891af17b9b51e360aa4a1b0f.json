{"ast":null,"code":"import _objectSpread from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/src/pages/create_contract/components/FormFields/CheckboxField_ong.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { at } from 'lodash';\nimport { useField } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSMPC } from '../../../../redux/create_contract/cc.actions';\nimport { selectCCSMPC } from '../../../../redux/create_contract/cc.selector';\nimport { Checkbox, FormControl, FormControlLabel, FormHelperText } from '@material-ui/core';\nexport default function CheckboxField_smpc(props) {\n  _s();\n\n  var label = props.label,\n      rest = _objectWithoutProperties(props, [\"label\"]);\n\n  var _useField = useField(props),\n      _useField2 = _slicedToArray(_useField, 3),\n      field = _useField2[0],\n      meta = _useField2[1],\n      helper = _useField2[2];\n\n  var setValue = helper.setValue;\n  var dispatch = useDispatch();\n  var ccreduxsmpc = useSelector(function (state) {\n    return selectCCSMPC(state);\n  });\n  console.log(ccreduxsmpc);\n\n  function _renderHelperText() {\n    var _at = at(meta, 'touched', 'error'),\n        _at2 = _slicedToArray(_at, 2),\n        touched = _at2[0],\n        error = _at2[1];\n\n    if (touched && error) {\n      return /*#__PURE__*/_jsxDEV(FormHelperText, {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  function _onChange(e) {\n    setValue(e.target.checked);\n    dispatch(setSMPC());\n  }\n\n  return /*#__PURE__*/_jsxDEV(FormControl, _objectSpread(_objectSpread({}, rest), {}, {\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      value: field.checked,\n      checked: field.checked ? field.checked : ccreduxsmpc,\n      control: /*#__PURE__*/_jsxDEV(Checkbox, _objectSpread(_objectSpread({}, field), {}, {\n        onChange: _onChange\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 26\n      }, this),\n      label: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), _renderHelperText()]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CheckboxField_smpc, \"eVtho6T/1HNpKY/sM59Ak4Lz+oA=\", false, function () {\n  return [useField, useDispatch, useSelector];\n});\n\n_c = CheckboxField_smpc;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxField_smpc\");","map":{"version":3,"sources":["/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/src/pages/create_contract/components/FormFields/CheckboxField_ong.jsx"],"names":["React","at","useField","useDispatch","useSelector","setSMPC","selectCCSMPC","Checkbox","FormControl","FormControlLabel","FormHelperText","CheckboxField_smpc","props","label","rest","field","meta","helper","setValue","dispatch","ccreduxsmpc","state","console","log","_renderHelperText","touched","error","_onChange","e","target","checked"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAT,QAAmB,QAAnB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,8CAAxB;AACA,SAASC,YAAT,QAA6B,+CAA7B;AACA,SACIC,QADJ,EAEIC,WAFJ,EAGIC,gBAHJ,EAIIC,cAJJ,QAKO,mBALP;AAOA,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA;;AAAA,MACtCC,KADsC,GACnBD,KADmB,CACtCC,KADsC;AAAA,MAC5BC,IAD4B,4BACnBF,KADmB;;AAAA,kBAEhBV,QAAQ,CAACU,KAAD,CAFQ;AAAA;AAAA,MAEvCG,KAFuC;AAAA,MAEhCC,IAFgC;AAAA,MAE1BC,MAF0B;;AAAA,MAGtCC,QAHsC,GAGzBD,MAHyB,CAGtCC,QAHsC;AAI9C,MAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AACA,MAAMiB,WAAW,GAAGhB,WAAW,CAAC,UAAAiB,KAAK;AAAA,WAAIf,YAAY,CAACe,KAAD,CAAhB;AAAA,GAAN,CAA/B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;;AACA,WAASI,iBAAT,GAA6B;AAAA,cACAvB,EAAE,CAACe,IAAD,EAAO,SAAP,EAAkB,OAAlB,CADF;AAAA;AAAA,QAClBS,OADkB;AAAA,QACTC,KADS;;AAEzB,QAAID,OAAO,IAAIC,KAAf,EAAsB;AAClB,0BAAO,QAAC,cAAD;AAAA,kBAAiBA;AAAjB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ;;AAED,WAASC,SAAT,CAAmBC,CAAnB,EAAsB;AAClBV,IAAAA,QAAQ,CAACU,CAAC,CAACC,MAAF,CAASC,OAAV,CAAR;AACAX,IAAAA,QAAQ,CAACd,OAAO,EAAR,CAAR;AACH;;AAED,sBACI,QAAC,WAAD,kCAAiBS,IAAjB;AAAA,4BACI,QAAC,gBAAD;AACI,MAAA,KAAK,EAAEC,KAAK,CAACe,OADjB;AAEI,MAAA,OAAO,EAAEf,KAAK,CAACe,OAAN,GAAgBf,KAAK,CAACe,OAAtB,GAAgCV,WAF7C;AAGI,MAAA,OAAO,eAAE,QAAC,QAAD,kCAAcL,KAAd;AAAqB,QAAA,QAAQ,EAAEY;AAA/B;AAAA;AAAA;AAAA;AAAA,cAHb;AAII,MAAA,KAAK,EAAEd;AAJX;AAAA;AAAA;AAAA;AAAA,YADJ,EAOKW,iBAAiB,EAPtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA9BuBb,kB;UAEUT,Q,EAEbC,W,EACGC,W;;;KALAO,kB","sourcesContent":["import React from 'react';\nimport { at } from 'lodash';\nimport { useField } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSMPC } from '../../../../redux/create_contract/cc.actions';\nimport { selectCCSMPC } from '../../../../redux/create_contract/cc.selector'\nimport {\n    Checkbox,\n    FormControl,\n    FormControlLabel,\n    FormHelperText\n} from '@material-ui/core';\n\nexport default function CheckboxField_smpc(props) {\n    const { label, ...rest } = props;\n    const [field, meta, helper] = useField(props);\n    const { setValue } = helper;\n    const dispatch = useDispatch()\n    const ccreduxsmpc = useSelector(state => selectCCSMPC(state))\n    console.log(ccreduxsmpc)\n    function _renderHelperText() {\n        const [touched, error] = at(meta, 'touched', 'error');\n        if (touched && error) {\n            return <FormHelperText>{error}</FormHelperText>;\n        }\n    }\n\n    function _onChange(e) {\n        setValue(e.target.checked);\n        dispatch(setSMPC())\n    }\n\n    return (\n        <FormControl {...rest}>\n            <FormControlLabel\n                value={field.checked}\n                checked={field.checked ? field.checked : ccreduxsmpc}\n                control={<Checkbox {...field} onChange={_onChange} />}\n                label={label}\n            />\n            {_renderHelperText()}\n        </FormControl>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}