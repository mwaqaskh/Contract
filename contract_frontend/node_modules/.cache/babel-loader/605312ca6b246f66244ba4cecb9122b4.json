{"ast":null,"code":"import _regeneratorRuntime from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nvar baseURL = 'http://127.0.0.1:8000/api/';\nvar axiosInstance = axios.create({\n  baseURL: baseURL,\n  timeout: 5000,\n  headers: {\n    Authorization: localStorage.getItem('access_token') ? 'JWT ' + localStorage.getItem('access_token') : null,\n    'Content-Type': 'application/json',\n    accept: 'application/json'\n  }\n});\naxiosInstance.interceptors.response.use(function (response) {\n  return response;\n}, /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(error) {\n    var originalRequest, refreshToken, tokenParts, now;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            originalRequest = error.config;\n\n            if (!(typeof error.response === 'undefined')) {\n              _context.next = 4;\n              break;\n            }\n\n            alert('A server/network error occurred. ' + 'Looks like CORS might be the problem. ' + 'Sorry about this - we will get it fixed shortly.');\n            return _context.abrupt(\"return\", Promise.reject(error));\n\n          case 4:\n            if (!(error.response.status === 401 && originalRequest.url === baseURL + 'token/refresh/')) {\n              _context.next = 7;\n              break;\n            }\n\n            window.location.href = '/login/';\n            return _context.abrupt(\"return\", Promise.reject(error));\n\n          case 7:\n            if (!(error.response.data.code === 'token_not_valid' && error.response.status === 401 && error.response.statusText === 'Unauthorized')) {\n              _context.next = 23;\n              break;\n            }\n\n            refreshToken = localStorage.getItem('refresh_token');\n\n            if (!refreshToken) {\n              _context.next = 21;\n              break;\n            }\n\n            tokenParts = JSON.parse(atob(refreshToken.split('.')[1])); // exp date in token is expressed in seconds, while now() returns milliseconds:\n\n            now = Math.ceil(Date.now() / 1000);\n            console.log(tokenParts.exp);\n\n            if (!(tokenParts.exp > now)) {\n              _context.next = 17;\n              break;\n            }\n\n            return _context.abrupt(\"return\", axiosInstance.post('/token/refresh/', {\n              refresh: refreshToken\n            }).then(function (response) {\n              localStorage.setItem('access_token', response.data.access);\n              localStorage.setItem('refresh_token', response.data.refresh);\n              axiosInstance.defaults.headers['Authorization'] = 'JWT ' + response.data.access;\n              originalRequest.headers['Authorization'] = 'JWT ' + response.data.access;\n              return axiosInstance(originalRequest);\n            }).catch(function (err) {\n              console.log(err);\n            }));\n\n          case 17:\n            console.log('Refresh token is expired', tokenParts.exp, now);\n            window.location.href = '/login/';\n\n          case 19:\n            _context.next = 23;\n            break;\n\n          case 21:\n            console.log('Refresh token not available.');\n            window.location.href = '/login/';\n\n          case 23:\n            return _context.abrupt(\"return\", Promise.reject(error));\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\nexport default axiosInstance;","map":{"version":3,"sources":["/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/src/utils/axios.js"],"names":["axios","baseURL","axiosInstance","create","timeout","headers","Authorization","localStorage","getItem","accept","interceptors","response","use","error","originalRequest","config","alert","Promise","reject","status","url","window","location","href","data","code","statusText","refreshToken","tokenParts","JSON","parse","atob","split","now","Math","ceil","Date","console","log","exp","post","refresh","then","setItem","access","defaults","catch","err"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nconst baseURL = 'http://127.0.0.1:8000/api/';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: baseURL,\r\n    timeout: 5000,\r\n    headers: {\r\n        Authorization: localStorage.getItem('access_token') ?\r\n            'JWT ' + localStorage.getItem('access_token') : null,\r\n        'Content-Type': 'application/json',\r\n        accept: 'application/json',\r\n    },\r\n});\r\n\r\naxiosInstance.interceptors.response.use(\r\n    (response) => {\r\n        return response;\r\n    },\r\n    async function(error) {\r\n        const originalRequest = error.config;\r\n\r\n        if (typeof error.response === 'undefined') {\r\n            alert(\r\n                'A server/network error occurred. ' +\r\n                'Looks like CORS might be the problem. ' +\r\n                'Sorry about this - we will get it fixed shortly.'\r\n            );\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        if (\r\n            error.response.status === 401 &&\r\n            originalRequest.url === baseURL + 'token/refresh/'\r\n        ) {\r\n            window.location.href = '/login/';\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        if (\r\n            error.response.data.code === 'token_not_valid' &&\r\n            error.response.status === 401 &&\r\n            error.response.statusText === 'Unauthorized'\r\n        ) {\r\n            const refreshToken = localStorage.getItem('refresh_token');\r\n\r\n            if (refreshToken) {\r\n                const tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\r\n\r\n                // exp date in token is expressed in seconds, while now() returns milliseconds:\r\n                const now = Math.ceil(Date.now() / 1000);\r\n                console.log(tokenParts.exp);\r\n\r\n                if (tokenParts.exp > now) {\r\n                    return axiosInstance\r\n                        .post('/token/refresh/', {\r\n                            refresh: refreshToken\r\n                        })\r\n                        .then((response) => {\r\n                            localStorage.setItem('access_token', response.data.access);\r\n                            localStorage.setItem('refresh_token', response.data.refresh);\r\n\r\n                            axiosInstance.defaults.headers['Authorization'] =\r\n                                'JWT ' + response.data.access;\r\n                            originalRequest.headers['Authorization'] =\r\n                                'JWT ' + response.data.access;\r\n\r\n                            return axiosInstance(originalRequest);\r\n                        })\r\n                        .catch((err) => {\r\n                            console.log(err);\r\n                        });\r\n                } else {\r\n                    console.log('Refresh token is expired', tokenParts.exp, now);\r\n                    window.location.href = '/login/';\r\n                }\r\n            } else {\r\n                console.log('Refresh token not available.');\r\n                window.location.href = '/login/';\r\n            }\r\n        }\r\n\r\n        // specific error handling done elsewhere\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default axiosInstance;"]},"metadata":{},"sourceType":"module"}