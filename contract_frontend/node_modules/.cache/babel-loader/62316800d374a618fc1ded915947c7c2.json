{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/src/pages/maps/GoogleMaps/Streetview.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CardContent, Card as MuiCard, Typography } from \"@material-ui/core\";\nimport { spacing } from \"@material-ui/system\";\nimport GoogleMapReact from \"google-map-react\";\n\nvar Card = _styled(MuiCard).withConfig({\n  displayName: \"Streetview__Card\",\n  componentId: \"sc-17v1eda-0\"\n})(spacing);\n\nvar Spacer = _styled.div.withConfig({\n  displayName: \"Streetview__Spacer\",\n  componentId: \"sc-17v1eda-1\"\n})(spacing);\n\nvar GoogleMapReactWrapper = _styled.div.withConfig({\n  displayName: \"Streetview__GoogleMapReactWrapper\",\n  componentId: \"sc-17v1eda-2\"\n})([\"height:300px;width:100%;\"]);\n\nfunction Streetview() {\n  var options = {\n    center: {\n      lat: 40.712784,\n      lng: -74.005941\n    },\n    zoom: 14\n  };\n\n  var getMapOptions = function getMapOptions() {\n    return {\n      fullscreenControl: true,\n      mapTypeControl: true,\n      scaleControl: true,\n      scrollwheel: false,\n      streetViewControl: true\n    };\n  };\n\n  var apiIsLoaded = function apiIsLoaded(map, maps) {\n    if (map) {\n      var panorama = new maps.StreetViewPanorama(ReactDOM.findDOMNode(panoramaRef.current), {\n        position: {\n          lat: 42.345573,\n          lng: -71.098326\n        },\n        pov: {\n          heading: 160,\n          pitch: 0\n        },\n        visible: true\n      });\n      map.setStreetView(panorama);\n    }\n  };\n\n  var panoramaRef = /*#__PURE__*/React.createRef();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    mb: 1,\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Streetview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        gutterBottom: true,\n        children: \"Panoramic 360 degree views from designated roads throughout its coverage area.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Spacer, {\n        mb: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleMapReactWrapper, {\n        children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n          ref: panoramaRef,\n          options: getMapOptions,\n          bootstrapURLKeys: {\n            key: \"AIzaSyA-aWrwgr64q4b3TEZwQ0lkHI4lZK-moM4\"\n          },\n          defaultCenter: options.center,\n          defaultZoom: options.zoom,\n          onGoogleApiLoaded: function onGoogleApiLoaded(_ref) {\n            var map = _ref.map,\n                maps = _ref.maps;\n            return apiIsLoaded(map, maps);\n          },\n          yesIWantToUseGoogleMapApiInternals: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Streetview;\nexport default Streetview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Streetview\");","map":{"version":3,"sources":["/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/src/pages/maps/GoogleMaps/Streetview.js"],"names":["React","ReactDOM","CardContent","Card","MuiCard","Typography","spacing","GoogleMapReact","styled","Spacer","div","GoogleMapReactWrapper","Streetview","options","center","lat","lng","zoom","getMapOptions","fullscreenControl","mapTypeControl","scaleControl","scrollwheel","streetViewControl","apiIsLoaded","map","maps","panorama","StreetViewPanorama","findDOMNode","panoramaRef","current","position","pov","heading","pitch","visible","setStreetView","createRef","key"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { CardContent, Card as MuiCard, Typography } from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Spacer = styled.div(spacing);\r\n\r\nconst GoogleMapReactWrapper = styled.div`\r\n  height: 300px;\r\n  width: 100%;\r\n`;\r\n\r\nfunction Streetview() {\r\n  const options = {\r\n    center: {\r\n      lat: 40.712784,\r\n      lng: -74.005941,\r\n    },\r\n    zoom: 14,\r\n  };\r\n\r\n  const getMapOptions = () => {\r\n    return {\r\n      fullscreenControl: true,\r\n      mapTypeControl: true,\r\n      scaleControl: true,\r\n      scrollwheel: false,\r\n      streetViewControl: true,\r\n    };\r\n  };\r\n\r\n  const apiIsLoaded = (map, maps) => {\r\n    if (map) {\r\n      const panorama = new maps.StreetViewPanorama(\r\n        ReactDOM.findDOMNode(panoramaRef.current),\r\n        {\r\n          position: {\r\n            lat: 42.345573,\r\n            lng: -71.098326,\r\n          },\r\n          pov: {\r\n            heading: 160,\r\n            pitch: 0,\r\n          },\r\n          visible: true,\r\n        }\r\n      );\r\n      map.setStreetView(panorama);\r\n    }\r\n  };\r\n\r\n  const panoramaRef = React.createRef();\r\n\r\n  return (\r\n    <Card mb={1}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Streetview\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Panoramic 360 degree views from designated roads throughout its\r\n          coverage area.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <GoogleMapReactWrapper>\r\n          <GoogleMapReact\r\n            ref={panoramaRef}\r\n            options={getMapOptions}\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyA-aWrwgr64q4b3TEZwQ0lkHI4lZK-moM4\",\r\n            }}\r\n            defaultCenter={options.center}\r\n            defaultZoom={options.zoom}\r\n            onGoogleApiLoaded={({ map, maps }) => apiIsLoaded(map, maps)}\r\n            yesIWantToUseGoogleMapApiInternals={true}\r\n          />\r\n        </GoogleMapReactWrapper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Streetview;\r\n"]},"metadata":{},"sourceType":"module"}