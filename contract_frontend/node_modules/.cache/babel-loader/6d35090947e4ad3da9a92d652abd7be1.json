{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/src/pages/configurations/contract_configurations/region_config/region.form.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    btn: {\n      marginTop: '1.5em'\n    }\n  };\n});\nvar validationSchema = yup.object({\n  regname: yup.string('Enter your email').required('Email is required')\n});\n\nvar RegionAddForm = function RegionAddForm() {\n  _s();\n\n  var classes = useStyles();\n  var formik = useFormik({\n    initialValues: {\n      regname: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values) {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.btn,\n      variant: \"h4\",\n      children: \" Add Region Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"regname\",\n        name: \"regname\",\n        label: \"Region Name\",\n        value: formik.values.regname,\n        onChange: formik.handleChange,\n        error: formik.touched.regname && Boolean(formik.errors.regname),\n        helperText: formik.touched.regname && formik.errors.regname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.btn,\n        color: \"primary\",\n        variant: \"contained\",\n        fullWidth: true,\n        type: \"submit\",\n        children: \"Add Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(RegionAddForm, \"C5g7rQO6GJW4fOIoJxJdUVhrL6g=\", false, function () {\n  return [useStyles, useFormik];\n});\n\n_c = RegionAddForm;\nexport default RegionAddForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegionAddForm\");","map":{"version":3,"sources":["/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/src/pages/configurations/contract_configurations/region_config/region.form.jsx"],"names":["React","ReactDOM","useFormik","yup","Button","TextField","makeStyles","Typography","useStyles","theme","btn","marginTop","validationSchema","object","regname","string","required","RegionAddForm","classes","formik","initialValues","onSubmit","values","alert","JSON","stringify","handleSubmit","handleChange","touched","Boolean","errors"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAGA,IAAMC,SAAS,GAAGF,UAAU,CAAC,UAACG,KAAD;AAAA,SAAY;AACrCC,IAAAA,GAAG,EAAE;AACDC,MAAAA,SAAS,EAAE;AADV;AADgC,GAAZ;AAAA,CAAD,CAA5B;AAOA,IAAMC,gBAAgB,GAAGT,GAAG,CAACU,MAAJ,CAAW;AAChCC,EAAAA,OAAO,EAAEX,GAAG,CACPY,MADI,CACG,kBADH,EAEJC,QAFI,CAEK,mBAFL;AADuB,CAAX,CAAzB;;AAMA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AACxB,MAAMC,OAAO,GAAGV,SAAS,EAAzB;AACA,MAAMW,MAAM,GAAGjB,SAAS,CAAC;AACrBkB,IAAAA,aAAa,EAAE;AACXN,MAAAA,OAAO,EAAE;AADE,KADM;AAKrBF,IAAAA,gBAAgB,EAAEA,gBALG;AAMrBS,IAAAA,QAAQ,EAAE,kBAACC,MAAD,EAAY;AAClBC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACH;AARoB,GAAD,CAAxB;AAWA,sBACI;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEJ,OAAO,CAACR,GAA/B;AAAoC,MAAA,OAAO,EAAC,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAM,MAAA,QAAQ,EAAES,MAAM,CAACO,YAAvB;AAAA,8BACI,QAAC,SAAD;AACI,QAAA,SAAS,MADb;AAEI,QAAA,EAAE,EAAC,SAFP;AAGI,QAAA,IAAI,EAAC,SAHT;AAII,QAAA,KAAK,EAAC,aAJV;AAKI,QAAA,KAAK,EAAEP,MAAM,CAACG,MAAP,CAAcR,OALzB;AAMI,QAAA,QAAQ,EAAEK,MAAM,CAACQ,YANrB;AAOI,QAAA,KAAK,EAAER,MAAM,CAACS,OAAP,CAAed,OAAf,IAA0Be,OAAO,CAACV,MAAM,CAACW,MAAP,CAAchB,OAAf,CAP5C;AAQI,QAAA,UAAU,EAAEK,MAAM,CAACS,OAAP,CAAed,OAAf,IAA0BK,MAAM,CAACW,MAAP,CAAchB;AARxD;AAAA;AAAA;AAAA;AAAA,eADJ,eAYI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAEI,OAAO,CAACR,GAA3B;AAAgC,QAAA,KAAK,EAAC,SAAtC;AAAgD,QAAA,OAAO,EAAC,WAAxD;AAAoE,QAAA,SAAS,MAA7E;AAA8E,QAAA,IAAI,EAAC,QAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAqBH,CAlCD;;GAAMO,a;UACcT,S,EACDN,S;;;KAFbe,a;AAoCN,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n    btn: {\n        marginTop: '1.5em'\n    },\n\n}));\n\nconst validationSchema = yup.object({\n    regname: yup\n        .string('Enter your email')\n        .required('Email is required'),\n});\n\nconst RegionAddForm = () => {\n    const classes = useStyles();\n    const formik = useFormik({\n        initialValues: {\n            regname: '',\n\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            alert(JSON.stringify(values, null, 2));\n        },\n    });\n\n    return (\n        <div>\n            <Typography className={classes.btn} variant='h4'> Add Region Form</Typography>\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                    fullWidth\n                    id=\"regname\"\n                    name=\"regname\"\n                    label=\"Region Name\"\n                    value={formik.values.regname}\n                    onChange={formik.handleChange}\n                    error={formik.touched.regname && Boolean(formik.errors.regname)}\n                    helperText={formik.touched.regname && formik.errors.regname}\n                />\n\n                <Button className={classes.btn} color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n                    Add Region\n        </Button>\n            </form>\n        </div>\n    );\n};\n\nexport default RegionAddForm"]},"metadata":{},"sourceType":"module"}