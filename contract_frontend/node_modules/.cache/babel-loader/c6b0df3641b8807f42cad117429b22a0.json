{"ast":null,"code":"import _regeneratorRuntime from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, call } from 'redux-saga/effects';\nimport { onFetchUserStart } from '../user/user.sagas';\nimport { onFetchRegionStart } from '../config/config.sagas';\nimport { onAddRegionStart } from '../config/config.sagas';\nimport { onDelRegionStart } from '../config/config.sagas';\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([call(onFetchUserStart), call(onFetchRegionStart)]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/src/redux/store/root-saga.js"],"names":["rootSaga","all","call","onFetchUserStart","onFetchRegionStart","onAddRegionStart","onDelRegionStart"],"mappings":";;oDAQyBA,Q;;AARzB,SAASC,GAAT,EAAcC,IAAd,QAA0B,oBAA1B;AAEA,SAASC,gBAAT,QAAiC,oBAAjC;AAEA,SAASC,kBAAT,QAAmC,wBAAnC;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AAEA,eAAe,SAAUN,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CAACC,IAAI,CAACC,gBAAD,CAAL,EAAyBD,IAAI,CAACE,kBAAD,CAA7B,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, call } from 'redux-saga/effects';\n\nimport { onFetchUserStart } from '../user/user.sagas';\n\nimport { onFetchRegionStart } from '../config/config.sagas';\nimport { onAddRegionStart } from '../config/config.sagas';\nimport { onDelRegionStart } from '../config/config.sagas';\n\nexport default function* rootSaga() {\n    yield all([call(onFetchUserStart), call(onFetchRegionStart)]);\n    //yield all([call(onFetchRegionStart)]);\n    //yield all([call(onAddRegionStart)]);\n    //yield all([call(onDelRegionStart)]);\n}"]},"metadata":{},"sourceType":"module"}