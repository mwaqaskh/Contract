{"ast":null,"code":"import _toConsumableArray from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as CONFIG_DIV_types from './config_div.types';\nvar INITIAL_STATE = {\n  divList: [],\n  isDIVFetching: false,\n  errorDIVMessage: undefined\n};\n\nvar configDIVReducer = function configDIVReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    //DIV Fetch\n    case CONFIG_DIV_types.FETCH_DIV_START:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isDIVFetching: true\n      });\n\n    case CONFIG_DIV_types.FETCH_DIV_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isDIVFetching: false,\n        divList: action.payload\n      });\n\n    case CONFIG_DIV_types.FETCH_DIV_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isDIVFetching: false,\n        errorDIVMessage: action.payload\n      });\n    //DIV Add\n\n    case CONFIG_DIV_types.ADD_DIV_START:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isDIVFetching: true\n      });\n\n    case CONFIG_DIV_types.ADD_DIV_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isDIVFetching: false,\n        divList: [].concat(_toConsumableArray(state.divList), [action.payload])\n      });\n\n    case CONFIG_DIV_types.ADD_DIV_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isDIVFetching: false,\n        errorDIVMessage: action.payload\n      });\n    //DIV Delete\n\n    case CONFIG_DIV_types.DEL_DIV_START:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isDIVFetching: true\n      });\n\n    case CONFIG_DIV_types.DEL_DIV_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isDIVFetching: false,\n        divList: state.divList.filter(function (item, index) {\n          return item.id !== action.payload.id;\n        })\n      });\n\n    case CONFIG_DIV_types.DEL_DIV_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isDIVFetching: false,\n        errorDIVMessage: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default configDIVReducer;","map":{"version":3,"sources":["/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/src/redux/config_div/config_div.reducer.js"],"names":["CONFIG_DIV_types","INITIAL_STATE","divList","isDIVFetching","errorDIVMessage","undefined","configDIVReducer","state","action","type","FETCH_DIV_START","FETCH_DIV_SUCCESS","payload","FETCH_DIV_FAILURE","ADD_DIV_START","ADD_DIV_SUCCESS","ADD_DIV_FAILURE","DEL_DIV_START","DEL_DIV_SUCCESS","filter","item","index","id","DEL_DIV_FAILURE"],"mappings":";;AAAA,OAAO,KAAKA,gBAAZ,MAAkC,oBAAlC;AAEA,IAAMC,aAAa,GAAG;AAClBC,EAAAA,OAAO,EAAE,EADS;AAElBC,EAAAA,aAAa,EAAE,KAFG;AAGlBC,EAAAA,eAAe,EAAEC;AAHC,CAAtB;;AAOA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1BN,aAA0B;AAAA,MAAXO,MAAW;;AACxD,UAAQA,MAAM,CAACC,IAAf;AACI;AACA,SAAKT,gBAAgB,CAACU,eAAtB;AACI,6CACOH,KADP;AAEIJ,QAAAA,aAAa,EAAE;AAFnB;;AAIJ,SAAKH,gBAAgB,CAACW,iBAAtB;AACI,6CACOJ,KADP;AAEIJ,QAAAA,aAAa,EAAE,KAFnB;AAGID,QAAAA,OAAO,EAAEM,MAAM,CAACI;AAHpB;;AAKJ,SAAKZ,gBAAgB,CAACa,iBAAtB;AACI,6CACON,KADP;AAEIJ,QAAAA,aAAa,EAAE,KAFnB;AAGIC,QAAAA,eAAe,EAAEI,MAAM,CAACI;AAH5B;AAKA;;AACJ,SAAKZ,gBAAgB,CAACc,aAAtB;AACI,6CACOP,KADP;AAEIJ,QAAAA,aAAa,EAAE;AAFnB;;AAIJ,SAAKH,gBAAgB,CAACe,eAAtB;AACI,6CACOR,KADP;AAEIJ,QAAAA,aAAa,EAAE,KAFnB;AAGID,QAAAA,OAAO,+BAAMK,KAAK,CAACL,OAAZ,IAAqBM,MAAM,CAACI,OAA5B;AAHX;;AAKJ,SAAKZ,gBAAgB,CAACgB,eAAtB;AACI,6CACOT,KADP;AAEIJ,QAAAA,aAAa,EAAE,KAFnB;AAGIC,QAAAA,eAAe,EAAEI,MAAM,CAACI;AAH5B;AAKA;;AACJ,SAAKZ,gBAAgB,CAACiB,aAAtB;AACI,6CACOV,KADP;AAEIJ,QAAAA,aAAa,EAAE;AAFnB;;AAIJ,SAAKH,gBAAgB,CAACkB,eAAtB;AACI,6CACOX,KADP;AAEIJ,QAAAA,aAAa,EAAE,KAFnB;AAGID,QAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,CAAciB,MAAd,CAAqB,UAACC,IAAD,EAAOC,KAAP;AAAA,iBAAiBD,IAAI,CAACE,EAAL,KAAYd,MAAM,CAACI,OAAP,CAAeU,EAA5C;AAAA,SAArB;AAHb;;AAKJ,SAAKtB,gBAAgB,CAACuB,eAAtB;AACI,6CACOhB,KADP;AAEIJ,QAAAA,aAAa,EAAE,KAFnB;AAGIC,QAAAA,eAAe,EAAEI,MAAM,CAACI;AAH5B;;AAKJ;AACI,aAAOL,KAAP;AAxDR;AA0DH,CA3DD;;AA6DA,eAAeD,gBAAf","sourcesContent":["import * as CONFIG_DIV_types from './config_div.types';\r\n\r\nconst INITIAL_STATE = {\r\n    divList: [],\r\n    isDIVFetching: false,\r\n    errorDIVMessage: undefined\r\n};\r\n\r\n\r\nconst configDIVReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        //DIV Fetch\r\n        case CONFIG_DIV_types.FETCH_DIV_START:\r\n            return {\r\n                ...state,\r\n                isDIVFetching: true\r\n            };\r\n        case CONFIG_DIV_types.FETCH_DIV_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isDIVFetching: false,\r\n                divList: action.payload\r\n            };\r\n        case CONFIG_DIV_types.FETCH_DIV_FAILURE:\r\n            return {\r\n                ...state,\r\n                isDIVFetching: false,\r\n                errorDIVMessage: action.payload\r\n            };\r\n            //DIV Add\r\n        case CONFIG_DIV_types.ADD_DIV_START:\r\n            return {\r\n                ...state,\r\n                isDIVFetching: true\r\n            };\r\n        case CONFIG_DIV_types.ADD_DIV_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isDIVFetching: false,\r\n                divList: [...state.divList, action.payload]\r\n            };\r\n        case CONFIG_DIV_types.ADD_DIV_FAILURE:\r\n            return {\r\n                ...state,\r\n                isDIVFetching: false,\r\n                errorDIVMessage: action.payload\r\n            };\r\n            //DIV Delete\r\n        case CONFIG_DIV_types.DEL_DIV_START:\r\n            return {\r\n                ...state,\r\n                isDIVFetching: true\r\n            };\r\n        case CONFIG_DIV_types.DEL_DIV_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isDIVFetching: false,\r\n                divList: state.divList.filter((item, index) => item.id !== action.payload.id)\r\n            };\r\n        case CONFIG_DIV_types.DEL_DIV_FAILURE:\r\n            return {\r\n                ...state,\r\n                isDIVFetching: false,\r\n                errorDIVMessage: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default configDIVReducer;"]},"metadata":{},"sourceType":"module"}