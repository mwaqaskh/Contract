{"ast":null,"code":"import _objectSpread from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/src/pages/create_contract/components/FormFields/CheckboxField.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { at } from 'lodash';\nimport { useField } from 'formik';\nimport { Checkbox, FormControl, FormControlLabel, FormHelperText } from '@material-ui/core';\nexport default function CheckboxField(props) {\n  _s();\n\n  var label = props.label,\n      ccreduxsmpc = props.ccreduxsmpc,\n      rest = _objectWithoutProperties(props, [\"label\", \"ccreduxsmpc\"]);\n\n  var _useField = useField(props),\n      _useField2 = _slicedToArray(_useField, 3),\n      field = _useField2[0],\n      meta = _useField2[1],\n      helper = _useField2[2];\n\n  var setValue = helper.setValue;\n\n  function _renderHelperText() {\n    var _at = at(meta, 'touched', 'error'),\n        _at2 = _slicedToArray(_at, 2),\n        touched = _at2[0],\n        error = _at2[1];\n\n    if (touched && error) {\n      return /*#__PURE__*/_jsxDEV(FormHelperText, {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  function _onChange(e) {\n    setValue(e.target.checked);\n  }\n\n  return /*#__PURE__*/_jsxDEV(FormControl, _objectSpread(_objectSpread({}, rest), {}, {\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      value: field.checked,\n      checked: field.checked,\n      control: /*#__PURE__*/_jsxDEV(Checkbox, _objectSpread(_objectSpread({}, field), {}, {\n        onChange: _onChange\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 18\n      }, this),\n      label: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), _renderHelperText()]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckboxField, \"WZhZs2tAnEBkCtdm4Z68+TyJavc=\", false, function () {\n  return [useField];\n});\n\n_c = CheckboxField;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxField\");","map":{"version":3,"sources":["/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/src/pages/create_contract/components/FormFields/CheckboxField.jsx"],"names":["React","at","useField","Checkbox","FormControl","FormControlLabel","FormHelperText","CheckboxField","props","label","ccreduxsmpc","rest","field","meta","helper","setValue","_renderHelperText","touched","error","_onChange","e","target","checked"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAT,QAAmB,QAAnB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SACEC,QADF,EAEEC,WAFF,EAGEC,gBAHF,EAIEC,cAJF,QAKO,mBALP;AAOA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAAA,MACnCC,KADmC,GACHD,KADG,CACnCC,KADmC;AAAA,MAC5BC,WAD4B,GACHF,KADG,CAC5BE,WAD4B;AAAA,MACZC,IADY,4BACHH,KADG;;AAAA,kBAEbN,QAAQ,CAACM,KAAD,CAFK;AAAA;AAAA,MAEpCI,KAFoC;AAAA,MAE7BC,IAF6B;AAAA,MAEvBC,MAFuB;;AAAA,MAGnCC,QAHmC,GAGtBD,MAHsB,CAGnCC,QAHmC;;AAK3C,WAASC,iBAAT,GAA6B;AAAA,cACFf,EAAE,CAACY,IAAD,EAAO,SAAP,EAAkB,OAAlB,CADA;AAAA;AAAA,QACpBI,OADoB;AAAA,QACXC,KADW;;AAE3B,QAAID,OAAO,IAAIC,KAAf,EAAsB;AACpB,0BAAO,QAAC,cAAD;AAAA,kBAAiBA;AAAjB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF;;AAED,WAASC,SAAT,CAAmBC,CAAnB,EAAsB;AACpBL,IAAAA,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASC,OAAV,CAAR;AACD;;AAED,sBACE,QAAC,WAAD,kCAAiBX,IAAjB;AAAA,4BACE,QAAC,gBAAD;AACE,MAAA,KAAK,EAAEC,KAAK,CAACU,OADf;AAEE,MAAA,OAAO,EAAEV,KAAK,CAACU,OAFjB;AAGE,MAAA,OAAO,eAAE,QAAC,QAAD,kCAAcV,KAAd;AAAqB,QAAA,QAAQ,EAAEO;AAA/B;AAAA;AAAA;AAAA;AAAA,cAHX;AAIE,MAAA,KAAK,EAAEV;AAJT;AAAA;AAAA;AAAA;AAAA,YADF,EAOGO,iBAAiB,EAPpB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA3BuBT,a;UAEQL,Q;;;KAFRK,a","sourcesContent":["import React from 'react';\nimport { at } from 'lodash';\nimport { useField } from 'formik';\nimport {\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormHelperText\n} from '@material-ui/core';\n\nexport default function CheckboxField(props) {\n  const { label, ccreduxsmpc, ...rest } = props;\n  const [field, meta, helper] = useField(props);\n  const { setValue } = helper;\n\n  function _renderHelperText() {\n    const [touched, error] = at(meta, 'touched', 'error');\n    if (touched && error) {\n      return <FormHelperText>{error}</FormHelperText>;\n    }\n  }\n\n  function _onChange(e) {\n    setValue(e.target.checked);\n  }\n\n  return (\n    <FormControl {...rest}>\n      <FormControlLabel\n        value={field.checked}\n        checked={field.checked}\n        control={<Checkbox {...field} onChange={_onChange} />}\n        label={label}\n      />\n      {_renderHelperText()}\n    </FormControl>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}