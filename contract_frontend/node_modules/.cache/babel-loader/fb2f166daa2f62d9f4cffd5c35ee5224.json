{"ast":null,"code":"import _regeneratorRuntime from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/src/pages/configurations/contract_configurations/add_vendor/components/CheckoutPage/AddVendor.page.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Typography, CircularProgress } from '@material-ui/core';\nimport { Formik, Form } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from '../../../../../utils1.js/axios';\nimport { useHistory } from \"react-router-dom\";\nimport { fetchUserStart } from '../../../../../redux/user/user.actions';\nimport { Alert as MuiAlert, AlertTitle } from \"@material-ui/lab\";\nimport { spacing } from \"@material-ui/system\";\n\nvar Alert = _styled(MuiAlert).withConfig({\n  displayName: \"AddVendorpage__Alert\",\n  componentId: \"sc-1nlbnxc-0\"\n})(spacing);\n\nimport ContractInfo from './Forms/ContractInfo';\nimport validationSchema from './FormModel/validationSchema';\nimport checkoutFormModel from './FormModel/checkoutFormModel';\nimport formInitialValues from './FormModel/formInitialValues';\nimport useStyles from './styles';\nvar formId = checkoutFormModel.formId,\n    formField = checkoutFormModel.formField;\nexport default function AddVendors() {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      submitError = _useState2[0],\n      setSubmitError = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorCheck = _useState4[0],\n      setErrorCheck = _useState4[1];\n\n  var dispatch = useDispatch();\n  var history = useHistory();\n  useEffect(function () {\n    dispatch(fetchUserStart());\n  }, []);\n\n  function _submitForm(_x, _x2) {\n    return _submitForm2.apply(this, arguments);\n  }\n\n  function _submitForm2() {\n    _submitForm2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, actions) {\n      var post_data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(values);\n              post_data = _objectSpread({}, values);\n              post_data.created_by = 1;\n              post_data.vendor_number = \"SUPP\" + Math.floor(1000 + Math.random() * 90000000);\n              post_data = JSON.stringify(post_data, null, 2);\n              console.log(values);\n              axios.post(\"/vendor/basic/\", post_data).then(function (res) {\n                setErrorCheck(res.data.error);\n                console.log(res);\n                console.log(res.data.error);\n\n                if (res.data.error) {\n                  var error = JSON.stringify(res.data.message, null, 2);\n                  setSubmitError(error), actions.setSubmitting(false);\n                } else setSubmitError(''), console.log('No Error'), actions.setSubmitting(false), history.push(\"/dashboard/default/\");\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _submitForm2.apply(this, arguments);\n  }\n\n  function _handleReset() {\n    console.log('Fired Reset');\n    console.log(formInitialValues);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: formInitialValues,\n      validationSchema: validationSchema[0],\n      onSubmit: _submitForm,\n      enableReinitialize: true,\n      children: function children(_ref) {\n        var isSubmitting = _ref.isSubmitting;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          id: formId,\n          children: [/*#__PURE__*/_jsxDEV(ContractInfo, {\n            formField: formField\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.buttons,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"reset\",\n              onClick: _handleReset,\n              className: classes.button,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.wrapper,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                disabled: isSubmitting,\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                className: classes.button,\n                children: \"Create Vendor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, _this), isSubmitting && /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24,\n                className: classes.buttonProgress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, _this), submitError ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              mb: 4,\n              severity: \"error\",\n              children: submitError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, _this) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddVendors, \"fIHyM7LjTzNdoSLhWIFreDCEk7Q=\", false, function () {\n  return [useStyles, useDispatch, useHistory];\n});\n\n_c = AddVendors;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddVendors\");","map":{"version":3,"sources":["/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/src/pages/configurations/contract_configurations/add_vendor/components/CheckoutPage/AddVendor.page.jsx"],"names":["React","useState","useEffect","Button","Typography","CircularProgress","Formik","Form","useDispatch","useSelector","axios","useHistory","fetchUserStart","Alert","MuiAlert","AlertTitle","spacing","styled","ContractInfo","validationSchema","checkoutFormModel","formInitialValues","useStyles","formId","formField","AddVendors","classes","submitError","setSubmitError","errorCheck","setErrorCheck","dispatch","history","_submitForm","values","actions","console","log","post_data","created_by","vendor_number","Math","floor","random","JSON","stringify","post","then","res","data","error","message","setSubmitting","push","_handleReset","isSubmitting","buttons","button","wrapper","buttonProgress"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Button,\n  Typography,\n  CircularProgress\n} from '@material-ui/core';\nimport { Formik, Form } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from \"styled-components/macro\";\nimport axios from '../../../../../utils1.js/axios'\nimport { useHistory } from \"react-router-dom\";\n\n\nimport { fetchUserStart } from '../../../../../redux/user/user.actions'\nimport { Alert as MuiAlert, AlertTitle } from \"@material-ui/lab\";\nimport { spacing } from \"@material-ui/system\";\nconst Alert = styled(MuiAlert)(spacing);\n\n\n\nimport ContractInfo from './Forms/ContractInfo'\n\nimport validationSchema from './FormModel/validationSchema';\nimport checkoutFormModel from './FormModel/checkoutFormModel';\nimport formInitialValues from './FormModel/formInitialValues';\n\nimport useStyles from './styles';\n\nconst { formId, formField } = checkoutFormModel;\n\n\nexport default function AddVendors() {\n  const classes = useStyles();\n  const [submitError, setSubmitError] = useState('');\n  const [errorCheck, setErrorCheck] = useState();\n\n  const dispatch = useDispatch()\n\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(fetchUserStart())\n  }, []);\n\n\n  async function _submitForm(values, actions) {\n\n    console.log(values)\n\n\n    let post_data = { ...values }\n\n    post_data.created_by = 1;\n    post_data.vendor_number = \"SUPP\" + Math.floor(1000 + Math.random() * 90000000);\n\n\n    post_data = JSON.stringify(post_data, null, 2);\n    console.log(values)\n    axios\n      .post(`/vendor/basic/`, post_data)\n      .then((res) => {\n        setErrorCheck(res.data.error)\n        console.log(res)\n        console.log(res.data.error)\n        if (res.data.error) {\n          const error = JSON.stringify(res.data.message, null, 2)\n          setSubmitError(error), actions.setSubmitting(false)\n        } else (\n          setSubmitError(''),\n          console.log('No Error'),\n          actions.setSubmitting(false),\n          history.push(\"/dashboard/default/\")\n        )\n      });\n\n\n  }\n\n  function _handleReset() {\n    console.log('Fired Reset')\n    console.log(formInitialValues)\n\n  }\n\n  return (\n    <React.Fragment>\n      <Formik\n        initialValues={formInitialValues}\n        validationSchema={validationSchema[0]}\n        onSubmit={_submitForm}\n        enableReinitialize\n      >\n        {({ isSubmitting }) => (\n          <Form id={formId}>\n            <ContractInfo formField={formField} />\n\n\n            <div className={classes.buttons}>\n\n              <Button type='reset' onClick={_handleReset} className={classes.button}>\n                Reset\n                    </Button>\n              <div className={classes.wrapper}>\n                <Button\n                  disabled={isSubmitting}\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.button}\n                >\n                  Create Vendor\n                </Button>\n\n                {isSubmitting && (\n                  <CircularProgress\n                    size={24}\n                    className={classes.buttonProgress}\n                  />\n                )}\n              </div>\n\n            </div>\n            {submitError ?\n              <div>\n                <Alert mb={4} severity=\"error\">\n                  {submitError}\n                </Alert>\n              </div>\n\n              : ''}\n          </Form>\n        )}\n      </Formik>\n\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}