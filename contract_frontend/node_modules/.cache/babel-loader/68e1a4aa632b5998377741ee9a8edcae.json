{"ast":null,"code":"import _slicedToArray from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/src/pages/components/Dialogs.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport { Avatar, Button, CardContent, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, FormControlLabel, Grid, InputLabel, Link, List, ListItem, ListItemAvatar, ListItemText, MenuItem, Breadcrumbs as MuiBreadcrumbs, Card as MuiCard, Divider as MuiDivider, Paper as MuiPaper, Select, Switch, TextField, Typography } from \"@material-ui/core\";\nimport { Add as AddIcon, Person as PersonIcon } from \"@material-ui/icons\";\nimport { spacing } from \"@material-ui/system\";\n\nvar Card = _styled(MuiCard).withConfig({\n  displayName: \"Dialogs__Card\",\n  componentId: \"i567vz-0\"\n})(spacing);\n\nvar Divider = _styled(MuiDivider).withConfig({\n  displayName: \"Dialogs__Divider\",\n  componentId: \"i567vz-1\"\n})(spacing);\n\nvar Breadcrumbs = _styled(MuiBreadcrumbs).withConfig({\n  displayName: \"Dialogs__Breadcrumbs\",\n  componentId: \"i567vz-2\"\n})(spacing);\n\nvar Paper = _styled(MuiPaper).withConfig({\n  displayName: \"Dialogs__Paper\",\n  componentId: \"i567vz-3\"\n})(spacing);\n\nvar emails = [\"username@gmail.com\", \"user02@gmail.com\"];\n\nfunction SimpleDialog(props) {\n  var _this = this;\n\n  var onClose = props.onClose,\n      selectedValue = props.selectedValue,\n      open = props.open;\n\n  var handleClose = function handleClose() {\n    onClose(selectedValue);\n  };\n\n  var handleListItemClick = function handleListItemClick(value) {\n    onClose(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"simple-dialog-title\",\n      children: \"Set backup account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: [emails.map(function (email) {\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          onClick: function onClick() {\n            return handleListItemClick(email);\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, _this)]\n        }, email, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(ListItem, {\n        autoFocus: true,\n        button: true,\n        onClick: function onClick() {\n          return handleListItemClick(\"addAccount\");\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Add account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_c = SimpleDialog;\n\nfunction SimpleDialogDemo() {\n  _s();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(emails[1]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedValue = _React$useState4[0],\n      setSelectedValue = _React$useState4[1];\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose(value) {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    mb: 6,\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Simple Dialogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        gutterBottom: true,\n        children: \"Simple dialogs can provide additional details or actions about a list item.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        mt: 4,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleClickOpen,\n          children: \"Open simple dialog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SimpleDialog, {\n          selectedValue: selectedValue,\n          open: open,\n          onClose: handleClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          mt: 2,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Selected: \", selectedValue]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SimpleDialogDemo, \"Do4OkZlv0qopuj/OyvdbwyP1nrE=\");\n\n_c2 = SimpleDialogDemo;\n\nfunction AlertDialog() {\n  _s2();\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      open = _React$useState6[0],\n      setOpen = _React$useState6[1];\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    mb: 6,\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Alerts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        gutterBottom: true,\n        children: \"Alerts are urgent interruptions, requiring acknowledgement, that inform the user about a situation.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        mt: 4,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleClickOpen,\n          children: \"Open alert dialog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          open: open,\n          onClose: handleClose,\n          \"aria-labelledby\": \"alert-dialog-title\",\n          \"aria-describedby\": \"alert-dialog-description\",\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            id: \"alert-dialog-title\",\n            children: \"Use Google's location service?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n            children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n              id: \"alert-dialog-description\",\n              children: \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClose,\n              color: \"primary\",\n              children: \"Disagree\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClose,\n              color: \"primary\",\n              autoFocus: true,\n              children: \"Agree\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AlertDialog, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c3 = AlertDialog;\n\nfunction MaxWidthDialog() {\n  _s3();\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      open = _React$useState8[0],\n      setOpen = _React$useState8[1];\n\n  var _React$useState9 = React.useState(true),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      fullWidth = _React$useState10[0],\n      setFullWidth = _React$useState10[1];\n\n  var _React$useState11 = React.useState(\"sm\"),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      maxWidth = _React$useState12[0],\n      setMaxWidth = _React$useState12[1];\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var handleMaxWidthChange = function handleMaxWidthChange(event) {\n    setMaxWidth(event.target.value);\n  };\n\n  var handleFullWidthChange = function handleFullWidthChange(event) {\n    setFullWidth(event.target.checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    mb: 6,\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Optional Sizes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        gutterBottom: true,\n        children: \"You can set a dialog maximum width by using the maxWidth enumerable in combination with the fullWidth boolean.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        mt: 4,\n        children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleClickOpen,\n            children: \"Open max-width dialog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n            fullWidth: fullWidth,\n            maxWidth: maxWidth,\n            open: open,\n            onClose: handleClose,\n            \"aria-labelledby\": \"max-width-dialog-title\",\n            children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n              id: \"max-width-dialog-title\",\n              children: \"Optional sizes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n              children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n                children: \"You can set my maximum width and whether to adapt or not.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                noValidate: true,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"max-width\",\n                    children: \"maxWidth\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    autoFocus: true,\n                    value: maxWidth,\n                    onChange: handleMaxWidthChange,\n                    inputProps: {\n                      name: \"max-width\",\n                      id: \"max-width\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: false,\n                      children: \"false\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"xs\",\n                      children: \"xs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"sm\",\n                      children: \"sm\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"md\",\n                      children: \"md\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 269,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"lg\",\n                      children: \"lg\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 270,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"xl\",\n                      children: \"xl\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Switch, {\n                    checked: fullWidth,\n                    onChange: handleFullWidthChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 23\n                  }, this),\n                  label: \"Full width\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleClose,\n                color: \"primary\",\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(MaxWidthDialog, \"CajNghhteQTRpJ+vx/g0rA3urVw=\");\n\n_c4 = MaxWidthDialog;\n\nfunction FormDialog() {\n  _s4();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    mb: 6,\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Form Dialogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        gutterBottom: true,\n        children: \"Form dialogs allow users to fill out form fields within a dialog.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        mt: 4,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: function onClick() {\n              return setOpen(true);\n            },\n            children: \"Open form dialog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n            open: open,\n            onClose: function onClose() {\n              return setOpen(false);\n            },\n            \"aria-labelledby\": \"form-dialog-title\",\n            children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n              id: \"form-dialog-title\",\n              children: \"Subscribe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n              children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n                children: \"To subscribe to this website, please enter your email address here. We will send updates occasionally.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                autoFocus: true,\n                margin: \"dense\",\n                id: \"name\",\n                label: \"Email Address\",\n                type: \"email\",\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: function onClick() {\n                  return setOpen(false);\n                },\n                color: \"primary\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: function onClick() {\n                  return setOpen(false);\n                },\n                color: \"primary\",\n                children: \"Subscribe\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n}\n\n_s4(FormDialog, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c5 = FormDialog;\n\nfunction Dialogs() {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      title: \"Dialogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      gutterBottom: true,\n      display: \"inline\",\n      children: \"Dialogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      \"aria-label\": \"Breadcrumb\",\n      mt: 2,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        component: NavLink,\n        exact: true,\n        to: \"/\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        component: NavLink,\n        exact: true,\n        to: \"/\",\n        children: \"Components\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Dialogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      my: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 6,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(SimpleDialogDemo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AlertDialog, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(MaxWidthDialog, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormDialog, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 360,\n    columnNumber: 5\n  }, this);\n}\n\n_c6 = Dialogs;\nexport default Dialogs;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"SimpleDialog\");\n$RefreshReg$(_c2, \"SimpleDialogDemo\");\n$RefreshReg$(_c3, \"AlertDialog\");\n$RefreshReg$(_c4, \"MaxWidthDialog\");\n$RefreshReg$(_c5, \"FormDialog\");\n$RefreshReg$(_c6, \"Dialogs\");","map":{"version":3,"sources":["/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/src/pages/components/Dialogs.js"],"names":["React","useState","NavLink","Helmet","Avatar","Button","CardContent","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","FormControlLabel","Grid","InputLabel","Link","List","ListItem","ListItemAvatar","ListItemText","MenuItem","Breadcrumbs","MuiBreadcrumbs","Card","MuiCard","Divider","MuiDivider","Paper","MuiPaper","Select","Switch","TextField","Typography","Add","AddIcon","Person","PersonIcon","spacing","styled","emails","SimpleDialog","props","onClose","selectedValue","open","handleClose","handleListItemClick","value","map","email","SimpleDialogDemo","setOpen","setSelectedValue","handleClickOpen","AlertDialog","MaxWidthDialog","fullWidth","setFullWidth","maxWidth","setMaxWidth","handleMaxWidthChange","event","target","handleFullWidthChange","checked","name","id","FormDialog","Dialogs"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,SAASC,MAAT,QAAuB,cAAvB;AAEA,SACEC,MADF,EAEEC,MAFF,EAGEC,WAHF,EAIEC,MAJF,EAKEC,aALF,EAMEC,aANF,EAOEC,iBAPF,EAQEC,WARF,EASEC,WATF,EAUEC,gBAVF,EAWEC,IAXF,EAYEC,UAZF,EAaEC,IAbF,EAcEC,IAdF,EAeEC,QAfF,EAgBEC,cAhBF,EAiBEC,YAjBF,EAkBEC,QAlBF,EAmBEC,WAAW,IAAIC,cAnBjB,EAoBEC,IAAI,IAAIC,OApBV,EAqBEC,OAAO,IAAIC,UArBb,EAsBEC,KAAK,IAAIC,QAtBX,EAuBEC,MAvBF,EAwBEC,MAxBF,EAyBEC,SAzBF,EA0BEC,UA1BF,QA2BO,mBA3BP;AA6BA,SAASC,GAAG,IAAIC,OAAhB,EAAyBC,MAAM,IAAIC,UAAnC,QAAqD,oBAArD;AAEA,SAASC,OAAT,QAAwB,qBAAxB;;AAEA,IAAMd,IAAI,GAAGe,OAAM,CAACd,OAAD,CAAT;AAAA;AAAA;AAAA,GAAmBa,OAAnB,CAAV;;AAEA,IAAMZ,OAAO,GAAGa,OAAM,CAACZ,UAAD,CAAT;AAAA;AAAA;AAAA,GAAsBW,OAAtB,CAAb;;AAEA,IAAMhB,WAAW,GAAGiB,OAAM,CAAChB,cAAD,CAAT;AAAA;AAAA;AAAA,GAA0Be,OAA1B,CAAjB;;AAEA,IAAMV,KAAK,GAAGW,OAAM,CAACV,QAAD,CAAT;AAAA;AAAA;AAAA,GAAoBS,OAApB,CAAX;;AAEA,IAAME,MAAM,GAAG,CAAC,oBAAD,EAAuB,kBAAvB,CAAf;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAAA,MACnBC,OADmB,GACcD,KADd,CACnBC,OADmB;AAAA,MACVC,aADU,GACcF,KADd,CACVE,aADU;AAAA,MACKC,IADL,GACcH,KADd,CACKG,IADL;;AAG3B,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBH,IAAAA,OAAO,CAACC,aAAD,CAAP;AACD,GAFD;;AAIA,MAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAAW;AACrCL,IAAAA,OAAO,CAACK,KAAD,CAAP;AACD,GAFD;;AAIA,sBACE,QAAC,MAAD;AACE,IAAA,OAAO,EAAEF,WADX;AAEE,uBAAgB,qBAFlB;AAGE,IAAA,IAAI,EAAED,IAHR;AAAA,4BAKE,QAAC,WAAD;AAAa,MAAA,EAAE,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,IAAD;AAAA,iBACGL,MAAM,CAACS,GAAP,CAAW,UAACC,KAAD;AAAA,4BACV,QAAC,QAAD;AACE,UAAA,MAAM,MADR;AAEE,UAAA,OAAO,EAAE;AAAA,mBAAMH,mBAAmB,CAACG,KAAD,CAAzB;AAAA,WAFX;AAAA,kCAKE,QAAC,cAAD;AAAA,mCACE,QAAC,MAAD;AAAA,qCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBALF,eAUE,QAAC,YAAD;AAAc,YAAA,OAAO,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,mBAVF;AAAA,WAGOA,KAHP;AAAA;AAAA;AAAA;AAAA,iBADU;AAAA,OAAX,CADH,eAeE,QAAC,QAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,MAAM,MAFR;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAMH,mBAAmB,CAAC,YAAD,CAAzB;AAAA,SAHX;AAAA,gCAKE,QAAC,cAAD;AAAA,iCACE,QAAC,MAAD;AAAA,mCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF,eAUE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;KAhDQN,Y;;AAkDT,SAASU,gBAAT,GAA4B;AAAA;;AAAA,wBACFnD,KAAK,CAACC,QAAN,CAAe,KAAf,CADE;AAAA;AAAA,MACnB4C,IADmB;AAAA,MACbO,OADa;;AAAA,yBAEgBpD,KAAK,CAACC,QAAN,CAAeuC,MAAM,CAAC,CAAD,CAArB,CAFhB;AAAA;AAAA,MAEnBI,aAFmB;AAAA,MAEJS,gBAFI;;AAI1B,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5BF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,MAAMN,WAAW,GAAG,SAAdA,WAAc,CAACE,KAAD,EAAW;AAC7BI,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAC,IAAAA,gBAAgB,CAACL,KAAD,CAAhB;AACD,GAHD;;AAKA,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAE,CAAV;AAAA,2BACE,QAAC,WAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAA4B,QAAA,YAAY,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eASE,QAAC,KAAD;AAAO,QAAA,EAAE,EAAE,CAAX;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,KAAK,EAAC,SAAlC;AAA4C,UAAA,OAAO,EAAEM,eAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,YAAD;AACE,UAAA,aAAa,EAAEV,aADjB;AAEE,UAAA,IAAI,EAAEC,IAFR;AAGE,UAAA,OAAO,EAAEC;AAHX;AAAA;AAAA;AAAA;AAAA,gBAJF,eASE,QAAC,KAAD;AAAO,UAAA,EAAE,EAAE,CAAX;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAAA,qCAAuCF,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GAxCQO,gB;;MAAAA,gB;;AA0CT,SAASI,WAAT,GAAuB;AAAA;;AAAA,yBACGvD,KAAK,CAACC,QAAN,CAAe,KAAf,CADH;AAAA;AAAA,MACd4C,IADc;AAAA,MACRO,OADQ;;AAGrB,MAAME,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5BF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,MAAMN,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBM,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAE,CAAV;AAAA,2BACE,QAAC,WAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAA4B,QAAA,YAAY,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eASE,QAAC,KAAD;AAAO,QAAA,EAAE,EAAE,CAAX;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,KAAK,EAAC,SAAlC;AAA4C,UAAA,OAAO,EAAEE,eAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AACE,UAAA,IAAI,EAAET,IADR;AAEE,UAAA,OAAO,EAAEC,WAFX;AAGE,6BAAgB,oBAHlB;AAIE,8BAAiB,0BAJnB;AAAA,kCAME,QAAC,WAAD;AAAa,YAAA,EAAE,EAAC,oBAAhB;AAAA,sBACG;AADH;AAAA;AAAA;AAAA;AAAA,kBANF,eASE,QAAC,aAAD;AAAA,mCACE,QAAC,iBAAD;AAAmB,cAAA,EAAE,EAAC,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBATF,eAgBE,QAAC,aAAD;AAAA,oCACE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAEA,WAAjB;AAA8B,cAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAEA,WAAjB;AAA8B,cAAA,KAAK,EAAC,SAApC;AAA8C,cAAA,SAAS,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD;;IAvDQS,W;;MAAAA,W;;AAyDT,SAASC,cAAT,GAA0B;AAAA;;AAAA,yBACAxD,KAAK,CAACC,QAAN,CAAe,KAAf,CADA;AAAA;AAAA,MACjB4C,IADiB;AAAA,MACXO,OADW;;AAAA,yBAEUpD,KAAK,CAACC,QAAN,CAAe,IAAf,CAFV;AAAA;AAAA,MAEjBwD,SAFiB;AAAA,MAENC,YAFM;;AAAA,0BAGQ1D,KAAK,CAACC,QAAN,CAAe,IAAf,CAHR;AAAA;AAAA,MAGjB0D,QAHiB;AAAA,MAGPC,WAHO;;AAKxB,MAAMN,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5BF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,MAAMN,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBM,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,MAAMS,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,KAAD,EAAW;AACtCF,IAAAA,WAAW,CAACE,KAAK,CAACC,MAAN,CAAaf,KAAd,CAAX;AACD,GAFD;;AAIA,MAAMgB,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACF,KAAD,EAAW;AACvCJ,IAAAA,YAAY,CAACI,KAAK,CAACC,MAAN,CAAaE,OAAd,CAAZ;AACD,GAFD;;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAE,CAAV;AAAA,2BACE,QAAC,WAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAA4B,QAAA,YAAY,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eASE,QAAC,KAAD;AAAO,QAAA,EAAE,EAAE,CAAX;AAAA,+BACE,QAAC,KAAD,CAAO,QAAP;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,WADV;AAEE,YAAA,KAAK,EAAC,SAFR;AAGE,YAAA,OAAO,EAAEX,eAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE,QAAC,MAAD;AACE,YAAA,SAAS,EAAEG,SADb;AAEE,YAAA,QAAQ,EAAEE,QAFZ;AAGE,YAAA,IAAI,EAAEd,IAHR;AAIE,YAAA,OAAO,EAAEC,WAJX;AAKE,+BAAgB,wBALlB;AAAA,oCAOE,QAAC,WAAD;AAAa,cAAA,EAAE,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAUE,QAAC,aAAD;AAAA,sCACE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AAAM,gBAAA,UAAU,MAAhB;AAAA,uCACE,QAAC,WAAD;AAAA,0CACE,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,MAAD;AACE,oBAAA,SAAS,MADX;AAEE,oBAAA,KAAK,EAAEa,QAFT;AAGE,oBAAA,QAAQ,EAAEE,oBAHZ;AAIE,oBAAA,UAAU,EAAE;AACVK,sBAAAA,IAAI,EAAE,WADI;AAEVC,sBAAAA,EAAE,EAAE;AAFM,qBAJd;AAAA,4CASE,QAAC,QAAD;AAAU,sBAAA,KAAK,EAAE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BATF,eAUE,QAAC,QAAD;AAAU,sBAAA,KAAK,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAVF,eAWE,QAAC,QAAD;AAAU,sBAAA,KAAK,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAXF,eAYE,QAAC,QAAD;AAAU,sBAAA,KAAK,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAZF,eAaE,QAAC,QAAD;AAAU,sBAAA,KAAK,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAbF,eAcE,QAAC,QAAD;AAAU,sBAAA,KAAK,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAdF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAJF,eAyBE;AAAA,uCACE,QAAC,gBAAD;AACE,kBAAA,OAAO,eACL,QAAC,MAAD;AACE,oBAAA,OAAO,EAAEV,SADX;AAEE,oBAAA,QAAQ,EAAEO;AAFZ;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAOE,kBAAA,KAAK,EAAC;AAPR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,eA+CE,QAAC,aAAD;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAElB,WAAjB;AAA8B,gBAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBA/CF;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8ED;;IAnGQU,c;;MAAAA,c;;AAqGT,SAASY,UAAT,GAAsB;AAAA;;AAAA,kBACInE,QAAQ,CAAC,KAAD,CADZ;AAAA;AAAA,MACb4C,IADa;AAAA,MACPO,OADO;;AAGpB,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAE,CAAV;AAAA,2BACE,QAAC,WAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAA4B,QAAA,YAAY,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAQE,QAAC,KAAD;AAAO,QAAA,EAAE,EAAE,CAAX;AAAA,+BACE;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,WADV;AAEE,YAAA,KAAK,EAAC,SAFR;AAGE,YAAA,OAAO,EAAE;AAAA,qBAAMA,OAAO,CAAC,IAAD,CAAb;AAAA,aAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE,QAAC,MAAD;AACE,YAAA,IAAI,EAAEP,IADR;AAEE,YAAA,OAAO,EAAE;AAAA,qBAAMO,OAAO,CAAC,KAAD,CAAb;AAAA,aAFX;AAGE,+BAAgB,mBAHlB;AAAA,oCAKE,QAAC,WAAD;AAAa,cAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAME,QAAC,aAAD;AAAA,sCACE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAKE,QAAC,SAAD;AACE,gBAAA,SAAS,MADX;AAEE,gBAAA,MAAM,EAAC,OAFT;AAGE,gBAAA,EAAE,EAAC,MAHL;AAIE,gBAAA,KAAK,EAAC,eAJR;AAKE,gBAAA,IAAI,EAAC,OALP;AAME,gBAAA,SAAS;AANX;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,eAoBE,QAAC,aAAD;AAAA,sCACE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAE;AAAA,yBAAMA,OAAO,CAAC,KAAD,CAAb;AAAA,iBAAjB;AAAuC,gBAAA,KAAK,EAAC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAE;AAAA,yBAAMA,OAAO,CAAC,KAAD,CAAb;AAAA,iBAAjB;AAAuC,gBAAA,KAAK,EAAC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBApBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqDD;;IAxDQgB,U;;MAAAA,U;;AA0DT,SAASC,OAAT,GAAmB;AACjB,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,YAAY,MAArC;AAAsC,MAAA,OAAO,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME,QAAC,WAAD;AAAa,oBAAW,YAAxB;AAAqC,MAAA,EAAE,EAAE,CAAzC;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEnE,OAAjB;AAA0B,QAAA,KAAK,MAA/B;AAAgC,QAAA,EAAE,EAAC,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEA,OAAjB;AAA0B,QAAA,KAAK,MAA/B;AAAgC,QAAA,EAAE,EAAC,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAgBE,QAAC,OAAD;AAAS,MAAA,EAAE,EAAE;AAAb;AAAA;AAAA;AAAA;AAAA,YAhBF,eAkBE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA,gCACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA,gCACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;MAhCQmE,O;AAkCT,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CardContent,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Grid,\r\n  InputLabel,\r\n  Link,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  MenuItem,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Card as MuiCard,\r\n  Divider as MuiDivider,\r\n  Paper as MuiPaper,\r\n  Select,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Add as AddIcon, Person as PersonIcon } from \"@material-ui/icons\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nconst Paper = styled(MuiPaper)(spacing);\r\n\r\nconst emails = [\"username@gmail.com\", \"user02@gmail.com\"];\r\n\r\nfunction SimpleDialog(props) {\r\n  const { onClose, selectedValue, open } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  const handleListItemClick = (value) => {\r\n    onClose(value);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n    >\r\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\r\n      <List>\r\n        {emails.map((email) => (\r\n          <ListItem\r\n            button\r\n            onClick={() => handleListItemClick(email)}\r\n            key={email}\r\n          >\r\n            <ListItemAvatar>\r\n              <Avatar>\r\n                <PersonIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={email} />\r\n          </ListItem>\r\n        ))}\r\n        <ListItem\r\n          autoFocus\r\n          button\r\n          onClick={() => handleListItemClick(\"addAccount\")}\r\n        >\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <AddIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Add account\" />\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nfunction SimpleDialogDemo() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Simple Dialogs\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Simple dialogs can provide additional details or actions about a list\r\n          item.\r\n        </Typography>\r\n\r\n        <Paper mt={4}>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n            Open simple dialog\r\n          </Button>\r\n          <SimpleDialog\r\n            selectedValue={selectedValue}\r\n            open={open}\r\n            onClose={handleClose}\r\n          />\r\n          <Paper mt={2}>\r\n            <Typography variant=\"body2\">Selected: {selectedValue}</Typography>\r\n          </Paper>\r\n        </Paper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction AlertDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Alerts\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Alerts are urgent interruptions, requiring acknowledgement, that\r\n          inform the user about a situation.\r\n        </Typography>\r\n\r\n        <Paper mt={4}>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n            Open alert dialog\r\n          </Button>\r\n          <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n              {\"Use Google's location service?\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n                Let Google help apps determine location. This means sending\r\n                anonymous location data to Google, even when no apps are\r\n                running.\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Disagree\r\n              </Button>\r\n              <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                Agree\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Paper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction MaxWidthDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState(\"sm\");\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleMaxWidthChange = (event) => {\r\n    setMaxWidth(event.target.value);\r\n  };\r\n\r\n  const handleFullWidthChange = (event) => {\r\n    setFullWidth(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Optional Sizes\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          You can set a dialog maximum width by using the maxWidth enumerable in\r\n          combination with the fullWidth boolean.\r\n        </Typography>\r\n\r\n        <Paper mt={4}>\r\n          <React.Fragment>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Open max-width dialog\r\n            </Button>\r\n            <Dialog\r\n              fullWidth={fullWidth}\r\n              maxWidth={maxWidth}\r\n              open={open}\r\n              onClose={handleClose}\r\n              aria-labelledby=\"max-width-dialog-title\"\r\n            >\r\n              <DialogTitle id=\"max-width-dialog-title\">\r\n                Optional sizes\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText>\r\n                  You can set my maximum width and whether to adapt or not.\r\n                </DialogContentText>\r\n                <form noValidate>\r\n                  <FormControl>\r\n                    <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\r\n                    <Select\r\n                      autoFocus\r\n                      value={maxWidth}\r\n                      onChange={handleMaxWidthChange}\r\n                      inputProps={{\r\n                        name: \"max-width\",\r\n                        id: \"max-width\",\r\n                      }}\r\n                    >\r\n                      <MenuItem value={false}>false</MenuItem>\r\n                      <MenuItem value=\"xs\">xs</MenuItem>\r\n                      <MenuItem value=\"sm\">sm</MenuItem>\r\n                      <MenuItem value=\"md\">md</MenuItem>\r\n                      <MenuItem value=\"lg\">lg</MenuItem>\r\n                      <MenuItem value=\"xl\">xl</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </form>\r\n                <form>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        checked={fullWidth}\r\n                        onChange={handleFullWidthChange}\r\n                      />\r\n                    }\r\n                    label=\"Full width\"\r\n                  />\r\n                </form>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                  Close\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </React.Fragment>\r\n        </Paper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction FormDialog() {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <Card mb={6}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Form Dialogs\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Form dialogs allow users to fill out form fields within a dialog.\r\n        </Typography>\r\n\r\n        <Paper mt={4}>\r\n          <div>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => setOpen(true)}\r\n            >\r\n              Open form dialog\r\n            </Button>\r\n            <Dialog\r\n              open={open}\r\n              onClose={() => setOpen(false)}\r\n              aria-labelledby=\"form-dialog-title\"\r\n            >\r\n              <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText>\r\n                  To subscribe to this website, please enter your email address\r\n                  here. We will send updates occasionally.\r\n                </DialogContentText>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"name\"\r\n                  label=\"Email Address\"\r\n                  type=\"email\"\r\n                  fullWidth\r\n                />\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={() => setOpen(false)} color=\"primary\">\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={() => setOpen(false)} color=\"primary\">\r\n                  Subscribe\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n        </Paper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction Dialogs() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Dialogs\" />\r\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n        Dialogs\r\n      </Typography>\r\n\r\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Dashboard\r\n        </Link>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Components\r\n        </Link>\r\n        <Typography>Dialogs</Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12} md={6}>\r\n          <SimpleDialogDemo />\r\n          <AlertDialog />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <MaxWidthDialog />\r\n          <FormDialog />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Dialogs;\r\n"]},"metadata":{},"sourceType":"module"}