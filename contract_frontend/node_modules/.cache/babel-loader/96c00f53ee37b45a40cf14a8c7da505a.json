{"ast":null,"code":"import mock from \"../utils/mock\";\nvar userData = {\n  id: \"12345\",\n  email: \"demo@bootlab.io\",\n  name: \"Lucy Lavender\"\n};\nmock.onPost(\"/api/auth/sign-in\").reply(function (config) {\n  var _JSON$parse = JSON.parse(config.data),\n      email = _JSON$parse.email,\n      password = _JSON$parse.password;\n\n  if (email === \"demo@bootlab.io\" && password === \"unsafepassword\") {\n    return [200, userData];\n  }\n\n  return [401, {\n    message: \"Please check your email and password\"\n  }];\n});\nmock.onPost(\"/api/auth/sign-up\").reply(function () {\n  return [200, userData];\n});\nmock.onPost(\"/api/auth/reset-password\").reply(function () {\n  return [200, userData];\n});","map":{"version":3,"sources":["/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/src/mocks/authMock.js"],"names":["mock","userData","id","email","name","onPost","reply","config","JSON","parse","data","password","message"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,eAAjB;AAEA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,EAAE,EAAE,OADW;AAEfC,EAAAA,KAAK,EAAE,iBAFQ;AAGfC,EAAAA,IAAI,EAAE;AAHS,CAAjB;AAMAJ,IAAI,CAACK,MAAL,CAAY,mBAAZ,EAAiCC,KAAjC,CAAuC,UAACC,MAAD,EAAY;AAAA,oBACrBC,IAAI,CAACC,KAAL,CAAWF,MAAM,CAACG,IAAlB,CADqB;AAAA,MACzCP,KADyC,eACzCA,KADyC;AAAA,MAClCQ,QADkC,eAClCA,QADkC;;AAGjD,MAAIR,KAAK,KAAK,iBAAV,IAA+BQ,QAAQ,KAAK,gBAAhD,EAAkE;AAChE,WAAO,CAAC,GAAD,EAAMV,QAAN,CAAP;AACD;;AAED,SAAO,CAAC,GAAD,EAAM;AAAEW,IAAAA,OAAO,EAAE;AAAX,GAAN,CAAP;AACD,CARD;AAUAZ,IAAI,CAACK,MAAL,CAAY,mBAAZ,EAAiCC,KAAjC,CAAuC,YAAM;AAC3C,SAAO,CAAC,GAAD,EAAML,QAAN,CAAP;AACD,CAFD;AAIAD,IAAI,CAACK,MAAL,CAAY,0BAAZ,EAAwCC,KAAxC,CAA8C,YAAM;AAClD,SAAO,CAAC,GAAD,EAAML,QAAN,CAAP;AACD,CAFD","sourcesContent":["import mock from \"../utils/mock\";\r\n\r\nconst userData = {\r\n  id: \"12345\",\r\n  email: \"demo@bootlab.io\",\r\n  name: \"Lucy Lavender\",\r\n};\r\n\r\nmock.onPost(\"/api/auth/sign-in\").reply((config) => {\r\n  const { email, password } = JSON.parse(config.data);\r\n\r\n  if (email === \"demo@bootlab.io\" && password === \"unsafepassword\") {\r\n    return [200, userData];\r\n  }\r\n\r\n  return [401, { message: \"Please check your email and password\" }];\r\n});\r\n\r\nmock.onPost(\"/api/auth/sign-up\").reply(() => {\r\n  return [200, userData];\r\n});\r\n\r\nmock.onPost(\"/api/auth/reset-password\").reply(() => {\r\n  return [200, userData];\r\n});\r\n"]},"metadata":{},"sourceType":"module"}