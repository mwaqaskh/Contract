{"ast":null,"code":"import _objectSpread from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/src/pages/create_contract/components/FormFields/SelectField.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { at } from 'lodash';\nimport { useField } from 'formik';\nimport { InputLabel, FormControl, Select, MenuItem, FormHelperText } from '@material-ui/core';\n\nfunction SelectField(props) {\n  _s();\n\n  var _this = this;\n\n  var label = props.label,\n      data = props.data,\n      rest = _objectWithoutProperties(props, [\"label\", \"data\"]);\n\n  var _useField = useField(props),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      meta = _useField2[1];\n\n  var selectedValue = field.value;\n\n  var _at = at(meta, 'touched', 'error'),\n      _at2 = _slicedToArray(_at, 2),\n      touched = _at2[0],\n      error = _at2[1];\n\n  var isError = touched && error && true;\n\n  function _renderHelperText() {\n    if (isError) {\n      return /*#__PURE__*/_jsxDEV(FormHelperText, {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(FormControl, _objectSpread(_objectSpread({}, rest), {}, {\n    error: isError,\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, _objectSpread(_objectSpread({}, field), {}, {\n      value: selectedValue ? selectedValue : '',\n      children: data.map(function (item, index) {\n        return /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: item.value,\n          children: item.label\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, _this);\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), _renderHelperText()]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SelectField, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = SelectField;\nSelectField.defaultProps = {\n  data: []\n};\nSelectField.propTypes = {\n  data: PropTypes.array.isRequired\n};\nexport default SelectField;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectField\");","map":{"version":3,"sources":["/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/src/pages/create_contract/components/FormFields/SelectField.jsx"],"names":["React","PropTypes","at","useField","InputLabel","FormControl","Select","MenuItem","FormHelperText","SelectField","props","label","data","rest","field","meta","selectedValue","value","touched","error","isError","_renderHelperText","map","item","index","defaultProps","propTypes","array","isRequired"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,EAAT,QAAmB,QAAnB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SACEC,UADF,EAEEC,WAFF,EAGEC,MAHF,EAIEC,QAJF,EAKEC,cALF,QAMO,mBANP;;AAQA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAAA;;AAAA,MAClBC,KADkB,GACOD,KADP,CAClBC,KADkB;AAAA,MACXC,IADW,GACOF,KADP,CACXE,IADW;AAAA,MACFC,IADE,4BACOH,KADP;;AAAA,kBAEJP,QAAQ,CAACO,KAAD,CAFJ;AAAA;AAAA,MAEnBI,KAFmB;AAAA,MAEZC,IAFY;;AAAA,MAGXC,aAHW,GAGOF,KAHP,CAGlBG,KAHkB;;AAAA,YAIDf,EAAE,CAACa,IAAD,EAAO,SAAP,EAAkB,OAAlB,CAJD;AAAA;AAAA,MAInBG,OAJmB;AAAA,MAIVC,KAJU;;AAK1B,MAAMC,OAAO,GAAGF,OAAO,IAAIC,KAAX,IAAoB,IAApC;;AACA,WAASE,iBAAT,GAA6B;AAC3B,QAAID,OAAJ,EAAa;AACX,0BAAO,QAAC,cAAD;AAAA,kBAAiBD;AAAjB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF;;AAED,sBACE,QAAC,WAAD,kCAAiBN,IAAjB;AAAuB,IAAA,KAAK,EAAEO,OAA9B;AAAA,4BACE,QAAC,UAAD;AAAA,gBAAaT;AAAb;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD,kCAAYG,KAAZ;AAAmB,MAAA,KAAK,EAAEE,aAAa,GAAGA,aAAH,GAAmB,EAA1D;AAAA,gBACGJ,IAAI,CAACU,GAAL,CAAS,UAACC,IAAD,EAAOC,KAAP;AAAA,4BACR,QAAC,QAAD;AAAsB,UAAA,KAAK,EAAED,IAAI,CAACN,KAAlC;AAAA,oBACGM,IAAI,CAACZ;AADR,WAAea,KAAf;AAAA;AAAA;AAAA;AAAA,iBADQ;AAAA,OAAT;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,EASGH,iBAAiB,EATpB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAzBQZ,W;UAEeN,Q;;;KAFfM,W;AA2BTA,WAAW,CAACgB,YAAZ,GAA2B;AACzBb,EAAAA,IAAI,EAAE;AADmB,CAA3B;AAIAH,WAAW,CAACiB,SAAZ,GAAwB;AACtBd,EAAAA,IAAI,EAAEX,SAAS,CAAC0B,KAAV,CAAgBC;AADA,CAAxB;AAIA,eAAenB,WAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { at } from 'lodash';\nimport { useField } from 'formik';\nimport {\n  InputLabel,\n  FormControl,\n  Select,\n  MenuItem,\n  FormHelperText\n} from '@material-ui/core';\n\nfunction SelectField(props) {\n  const { label, data, ...rest } = props;\n  const [field, meta] = useField(props);\n  const { value: selectedValue } = field;\n  const [touched, error] = at(meta, 'touched', 'error');\n  const isError = touched && error && true;\n  function _renderHelperText() {\n    if (isError) {\n      return <FormHelperText>{error}</FormHelperText>;\n    }\n  }\n\n  return (\n    <FormControl {...rest} error={isError}>\n      <InputLabel>{label}</InputLabel>\n      <Select {...field} value={selectedValue ? selectedValue : ''}>\n        {data.map((item, index) => (\n          <MenuItem key={index} value={item.value}>\n            {item.label}\n          </MenuItem>\n        ))}\n      </Select>\n      {_renderHelperText()}\n    </FormControl>\n  );\n}\n\nSelectField.defaultProps = {\n  data: []\n};\n\nSelectField.propTypes = {\n  data: PropTypes.array.isRequired\n};\n\nexport default SelectField;\n"]},"metadata":{},"sourceType":"module"}