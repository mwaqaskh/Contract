{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/src/pages/configurations/contract_configurations/region_config/region.form.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchRegionStart } from '../../../../redux/config/config.actions';\nimport axios from '../../../../utils1.js/axios';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    btn: {\n      marginTop: '1.5em'\n    },\n    title: {\n      marginTop: '1em'\n    }\n  };\n});\nvar validationSchema = yup.object({\n  regname: yup.string('Enter your email').required('Email is required')\n});\n\nvar RegionAddForm = function RegionAddForm(_ref) {\n  _s();\n\n  var setOpen = _ref.setOpen;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      submitError = _useState2[0],\n      setSubmitError = _useState2[1];\n\n  var classes = useStyles();\n  var dispatch = useDispatch();\n  var formik = useFormik({\n    initialValues: {\n      regname: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values) {\n      alert(JSON.stringify(values, null, 2));\n      axios.post(\"/basic/region/\", values).then(function (res) {\n        console.log(res);\n        console.log(res.data.error);\n\n        if (res.data.error) {\n          var error = JSON.stringify(res.data.message, null, 2);\n          setSubmitError(error);\n        } else setSubmitError(''), console.log('No Error'), dispatch(fetchRegionStart()), setOpen(false);\n      });\n      setOpen(false);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"h3\",\n      children: \" Add Region Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"regname\",\n        name: \"regname\",\n        label: \"Region Name\",\n        value: formik.values.regname,\n        onChange: formik.handleChange,\n        error: formik.touched.regname && Boolean(formik.errors.regname),\n        helperText: formik.touched.regname && formik.errors.regname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.btn,\n        color: \"primary\",\n        variant: \"contained\",\n        fullWidth: true,\n        type: \"submit\",\n        children: \"Add Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(RegionAddForm, \"gOJVZTtUKvLQnbgnKvgiHnqvwVU=\", false, function () {\n  return [useStyles, useDispatch, useFormik];\n});\n\n_c = RegionAddForm;\nexport default RegionAddForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegionAddForm\");","map":{"version":3,"sources":["/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/src/pages/configurations/contract_configurations/region_config/region.form.jsx"],"names":["React","useState","ReactDOM","useFormik","yup","Button","TextField","makeStyles","Typography","useDispatch","useSelector","fetchRegionStart","axios","useStyles","theme","btn","marginTop","title","validationSchema","object","regname","string","required","RegionAddForm","setOpen","submitError","setSubmitError","classes","dispatch","formik","initialValues","onSubmit","values","alert","JSON","stringify","post","then","res","console","log","data","error","message","handleSubmit","handleChange","touched","Boolean","errors"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchRegionStart } from '../../../../redux/config/config.actions'\n\nimport axios from '../../../../utils1.js/axios'\n\n\nconst useStyles = makeStyles((theme) => ({\n    btn: {\n        marginTop: '1.5em'\n    },\n    title: {\n        marginTop: '1em'\n    },\n\n}));\n\nconst validationSchema = yup.object({\n    regname: yup\n        .string('Enter your email')\n        .required('Email is required'),\n});\n\nconst RegionAddForm = ({ setOpen }) => {\n    const [submitError, setSubmitError] = useState('');\n    const classes = useStyles();\n    const dispatch = useDispatch()\n    const formik = useFormik({\n        initialValues: {\n            regname: '',\n\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            alert(JSON.stringify(values, null, 2));\n            axios\n                .post(`/basic/region/`, values)\n                .then((res) => {\n\n                    console.log(res)\n                    console.log(res.data.error)\n                    if (res.data.error) {\n                        const error = JSON.stringify(res.data.message, null, 2)\n                        setSubmitError(error)\n                    } else (\n                        setSubmitError(''),\n                        console.log('No Error'),\n                        dispatch(fetchRegionStart()),\n                        setOpen(false)\n                    )\n                });\n            setOpen(false)\n        },\n    });\n\n    return (\n        <div>\n            <Typography className={classes.title} variant='h3'> Add Region Form</Typography>\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                    fullWidth\n                    id=\"regname\"\n                    name=\"regname\"\n                    label=\"Region Name\"\n                    value={formik.values.regname}\n                    onChange={formik.handleChange}\n                    error={formik.touched.regname && Boolean(formik.errors.regname)}\n                    helperText={formik.touched.regname && formik.errors.regname}\n                />\n\n                <Button className={classes.btn} color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n                    Add Region\n        </Button>\n            </form>\n        </div>\n    );\n};\n\nexport default RegionAddForm"]},"metadata":{},"sourceType":"module"}