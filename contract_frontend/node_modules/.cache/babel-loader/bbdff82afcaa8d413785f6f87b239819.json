{"ast":null,"code":"/**\n * Safe chained function.\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n * @param {function} functions to chain\n * @returns {function|null}\n */\nexport default function createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.reduce(function (acc, func) {\n    if (func == null) {\n      return acc;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof func !== 'function') {\n        console.error('Material-UI: Invalid argument type - must only provide functions, undefined, or null.');\n      }\n    }\n\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      acc.apply(this, args);\n      func.apply(this, args);\n    };\n  }, function () {});\n}","map":{"version":3,"sources":["/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/@material-ui/data-grid/node_modules/@material-ui/utils/esm/createChainedFunction.js"],"names":["createChainedFunction","funcs","reduce","acc","func","process","env","NODE_ENV","console","error","chainedFunction","args","apply"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,qBAAT,GAAyC;AAAA,oCAAPC,KAAO;AAAPA,IAAAA,KAAO;AAAA;;AACtD,SAAOA,KAAK,CAACC,MAAN,CAAa,UAACC,GAAD,EAAMC,IAAN,EAAe;AACjC,QAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB,aAAOD,GAAP;AACD;;AAED,QAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAI,OAAOH,IAAP,KAAgB,UAApB,EAAgC;AAC9BI,QAAAA,OAAO,CAACC,KAAR,CAAc,uFAAd;AACD;AACF;;AAED,WAAO,SAASC,eAAT,GAAkC;AAAA,yCAANC,IAAM;AAANA,QAAAA,IAAM;AAAA;;AACvCR,MAAAA,GAAG,CAACS,KAAJ,CAAU,IAAV,EAAgBD,IAAhB;AACAP,MAAAA,IAAI,CAACQ,KAAL,CAAW,IAAX,EAAiBD,IAAjB;AACD,KAHD;AAID,GAfM,EAeJ,YAAM,CAAE,CAfJ,CAAP;AAgBD","sourcesContent":["/**\n * Safe chained function.\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n * @param {function} functions to chain\n * @returns {function|null}\n */\nexport default function createChainedFunction(...funcs) {\n  return funcs.reduce((acc, func) => {\n    if (func == null) {\n      return acc;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof func !== 'function') {\n        console.error('Material-UI: Invalid argument type - must only provide functions, undefined, or null.');\n      }\n    }\n\n    return function chainedFunction(...args) {\n      acc.apply(this, args);\n      func.apply(this, args);\n    };\n  }, () => {});\n}"]},"metadata":{},"sourceType":"module"}