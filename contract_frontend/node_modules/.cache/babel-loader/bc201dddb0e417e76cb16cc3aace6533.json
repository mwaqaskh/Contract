{"ast":null,"code":"import _toConsumableArray from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as CONFIG_DEPT_types from './config_dept.types';\nvar INITIAL_STATE = {\n  deptList: [],\n  isDEPTFetching: false,\n  errorDEPTMessage: undefined\n};\n\nvar configDEPTReducer = function configDEPTReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    //DEPT Fetch\n    case CONFIG_DEPT_types.FETCH_DEPT_START:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isDEPTFetching: true\n      });\n\n    case CONFIG_DEPT_types.FETCH_DEPT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isDEPTFetching: false,\n        deptList: action.payload\n      });\n\n    case CONFIG_DEPT_types.FETCH_DEPT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isDEPTFetching: false,\n        errorDEPTMessage: action.payload\n      });\n    //DEPT Add\n\n    case CONFIG_DEPT_types.ADD_DEPT_START:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isDEPTFetching: true\n      });\n\n    case CONFIG_DEPT_types.ADD_DEPT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isDEPTFetching: false,\n        deptList: [].concat(_toConsumableArray(state.deptList), [action.payload])\n      });\n\n    case CONFIG_DEPT_types.ADD_DEPT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isDEPTFetching: false,\n        errorDEPTMessage: action.payload\n      });\n    //DEPT Delete\n\n    case CONFIG_DEPT_types.DEL_DEPT_START:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isDEPTFetching: true\n      });\n\n    case CONFIG_DEPT_types.DEL_DEPT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isDEPTFetching: false,\n        deptList: state.deptList.filter(function (item, index) {\n          return item.id !== action.payload.id;\n        })\n      });\n\n    case CONFIG_DEPT_types.DEL_DEPT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isDEPTFetching: false,\n        errorDEPTMessage: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default configDEPTReducer;","map":{"version":3,"sources":["/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/src/redux/config_dept/config_dept.reducer.js"],"names":["CONFIG_DEPT_types","INITIAL_STATE","deptList","isDEPTFetching","errorDEPTMessage","undefined","configDEPTReducer","state","action","type","FETCH_DEPT_START","FETCH_DEPT_SUCCESS","payload","FETCH_DEPT_FAILURE","ADD_DEPT_START","ADD_DEPT_SUCCESS","ADD_DEPT_FAILURE","DEL_DEPT_START","DEL_DEPT_SUCCESS","filter","item","index","id","DEL_DEPT_FAILURE"],"mappings":";;AAAA,OAAO,KAAKA,iBAAZ,MAAmC,qBAAnC;AAEA,IAAMC,aAAa,GAAG;AAClBC,EAAAA,QAAQ,EAAE,EADQ;AAElBC,EAAAA,cAAc,EAAE,KAFE;AAGlBC,EAAAA,gBAAgB,EAAEC;AAHA,CAAtB;;AAOA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1BN,aAA0B;AAAA,MAAXO,MAAW;;AACzD,UAAQA,MAAM,CAACC,IAAf;AACI;AACA,SAAKT,iBAAiB,CAACU,gBAAvB;AACI,6CACOH,KADP;AAEIJ,QAAAA,cAAc,EAAE;AAFpB;;AAIJ,SAAKH,iBAAiB,CAACW,kBAAvB;AACI,6CACOJ,KADP;AAEIJ,QAAAA,cAAc,EAAE,KAFpB;AAGID,QAAAA,QAAQ,EAAEM,MAAM,CAACI;AAHrB;;AAKJ,SAAKZ,iBAAiB,CAACa,kBAAvB;AACI,6CACON,KADP;AAEIJ,QAAAA,cAAc,EAAE,KAFpB;AAGIC,QAAAA,gBAAgB,EAAEI,MAAM,CAACI;AAH7B;AAKA;;AACJ,SAAKZ,iBAAiB,CAACc,cAAvB;AACI,6CACOP,KADP;AAEIJ,QAAAA,cAAc,EAAE;AAFpB;;AAIJ,SAAKH,iBAAiB,CAACe,gBAAvB;AACI,6CACOR,KADP;AAEIJ,QAAAA,cAAc,EAAE,KAFpB;AAGID,QAAAA,QAAQ,+BAAMK,KAAK,CAACL,QAAZ,IAAsBM,MAAM,CAACI,OAA7B;AAHZ;;AAKJ,SAAKZ,iBAAiB,CAACgB,gBAAvB;AACI,6CACOT,KADP;AAEIJ,QAAAA,cAAc,EAAE,KAFpB;AAGIC,QAAAA,gBAAgB,EAAEI,MAAM,CAACI;AAH7B;AAKA;;AACJ,SAAKZ,iBAAiB,CAACiB,cAAvB;AACI,6CACOV,KADP;AAEIJ,QAAAA,cAAc,EAAE;AAFpB;;AAIJ,SAAKH,iBAAiB,CAACkB,gBAAvB;AACI,6CACOX,KADP;AAEIJ,QAAAA,cAAc,EAAE,KAFpB;AAGID,QAAAA,QAAQ,EAAEK,KAAK,CAACL,QAAN,CAAeiB,MAAf,CAAsB,UAACC,IAAD,EAAOC,KAAP;AAAA,iBAAiBD,IAAI,CAACE,EAAL,KAAYd,MAAM,CAACI,OAAP,CAAeU,EAA5C;AAAA,SAAtB;AAHd;;AAKJ,SAAKtB,iBAAiB,CAACuB,gBAAvB;AACI,6CACOhB,KADP;AAEIJ,QAAAA,cAAc,EAAE,KAFpB;AAGIC,QAAAA,gBAAgB,EAAEI,MAAM,CAACI;AAH7B;;AAKJ;AACI,aAAOL,KAAP;AAxDR;AA0DH,CA3DD;;AA6DA,eAAeD,iBAAf","sourcesContent":["import * as CONFIG_DEPT_types from './config_dept.types'\n\nconst INITIAL_STATE = {\n    deptList: [],\n    isDEPTFetching: false,\n    errorDEPTMessage: undefined\n};\n\n\nconst configDEPTReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        //DEPT Fetch\n        case CONFIG_DEPT_types.FETCH_DEPT_START:\n            return {\n                ...state,\n                isDEPTFetching: true\n            };\n        case CONFIG_DEPT_types.FETCH_DEPT_SUCCESS:\n            return {\n                ...state,\n                isDEPTFetching: false,\n                deptList: action.payload\n            };\n        case CONFIG_DEPT_types.FETCH_DEPT_FAILURE:\n            return {\n                ...state,\n                isDEPTFetching: false,\n                errorDEPTMessage: action.payload\n            };\n            //DEPT Add\n        case CONFIG_DEPT_types.ADD_DEPT_START:\n            return {\n                ...state,\n                isDEPTFetching: true\n            };\n        case CONFIG_DEPT_types.ADD_DEPT_SUCCESS:\n            return {\n                ...state,\n                isDEPTFetching: false,\n                deptList: [...state.deptList, action.payload]\n            };\n        case CONFIG_DEPT_types.ADD_DEPT_FAILURE:\n            return {\n                ...state,\n                isDEPTFetching: false,\n                errorDEPTMessage: action.payload\n            };\n            //DEPT Delete\n        case CONFIG_DEPT_types.DEL_DEPT_START:\n            return {\n                ...state,\n                isDEPTFetching: true\n            };\n        case CONFIG_DEPT_types.DEL_DEPT_SUCCESS:\n            return {\n                ...state,\n                isDEPTFetching: false,\n                deptList: state.deptList.filter((item, index) => item.id !== action.payload.id)\n            };\n        case CONFIG_DEPT_types.DEL_DEPT_FAILURE:\n            return {\n                ...state,\n                isDEPTFetching: false,\n                errorDEPTMessage: action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default configDEPTReducer;"]},"metadata":{},"sourceType":"module"}