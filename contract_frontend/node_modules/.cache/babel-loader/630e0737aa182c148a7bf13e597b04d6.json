{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/src/pages/forms/Formik.js\";\nimport React from \"react\";\nimport * as Yup from \"yup\";\nimport { NavLink } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport { Box, Breadcrumbs as MuiBreadcrumbs, Button as MuiButton, Card as MuiCard, CardContent, CircularProgress, Divider as MuiDivider, Grid, Link, TextField as MuiTextField, Typography } from \"@material-ui/core\";\nimport { Alert as MuiAlert } from \"@material-ui/lab\";\nimport { spacing } from \"@material-ui/system\";\nimport { Helmet } from \"react-helmet\";\n\nvar Divider = _styled(MuiDivider).withConfig({\n  displayName: \"Formik__Divider\",\n  componentId: \"umsxry-0\"\n})(spacing);\n\nvar Breadcrumbs = _styled(MuiBreadcrumbs).withConfig({\n  displayName: \"Formik__Breadcrumbs\",\n  componentId: \"umsxry-1\"\n})(spacing);\n\nvar Card = _styled(MuiCard).withConfig({\n  displayName: \"Formik__Card\",\n  componentId: \"umsxry-2\"\n})(spacing);\n\nvar Alert = _styled(MuiAlert).withConfig({\n  displayName: \"Formik__Alert\",\n  componentId: \"umsxry-3\"\n})(spacing);\n\nvar TextField = _styled(MuiTextField).withConfig({\n  displayName: \"Formik__TextField\",\n  componentId: \"umsxry-4\"\n})(spacing);\n\nvar Button = _styled(MuiButton).withConfig({\n  displayName: \"Formik__Button\",\n  componentId: \"umsxry-5\"\n})(spacing);\n\nvar timeOut = function timeOut(time) {\n  return new Promise(function (res) {\n    return setTimeout(res, time);\n  });\n};\n\nvar initialValues = {\n  firstName: \"Lucy\",\n  lastName: \"Lavender\",\n  email: \"lucylavender@gmail.com\",\n  password: \"mypassword123\",\n  confirmPassword: \"mypassword123\"\n};\nvar validationSchema = Yup.object().shape({\n  firstName: Yup.string().required(\"Required\"),\n  lastName: Yup.string().required(\"Required\"),\n  email: Yup.string().email().required(\"Required\"),\n  password: Yup.string().min(12, \"Must be at least 12 characters\").max(255).required(\"Required\"),\n  confirmPassword: Yup.string().when(\"password\", {\n    is: function is(val) {\n      return val && val.length > 0 ? true : false;\n    },\n    then: Yup.string().oneOf([Yup.ref(\"password\")], \"Both password need to be the same\")\n  })\n});\n\nfunction BasicForm() {\n  var _this = this;\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref) {\n      var resetForm, setErrors, setStatus, setSubmitting;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              resetForm = _ref.resetForm, setErrors = _ref.setErrors, setStatus = _ref.setStatus, setSubmitting = _ref.setSubmitting;\n              _context.prev = 1;\n              _context.next = 4;\n              return timeOut(1500);\n\n            case 4:\n              resetForm();\n              setStatus({\n                sent: true\n              });\n              setSubmitting(false);\n              _context.next = 14;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              setStatus({\n                sent: false\n              });\n              setErrors({\n                submit: _context.t0.message\n              });\n              setSubmitting(false);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9]]);\n    }));\n\n    return function handleSubmit(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: handleSubmit,\n    children: function children(_ref3) {\n      var errors = _ref3.errors,\n          handleBlur = _ref3.handleBlur,\n          handleChange = _ref3.handleChange,\n          handleSubmit = _ref3.handleSubmit,\n          isSubmitting = _ref3.isSubmitting,\n          touched = _ref3.touched,\n          values = _ref3.values,\n          status = _ref3.status;\n      return /*#__PURE__*/_jsxDEV(Card, {\n        mb: 6,\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Formik\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            gutterBottom: true,\n            children: \"Formik example with Yup validation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, _this), status && status.sent && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"success\",\n            my: 3,\n            children: \"[DEMO] Your data has been submitted successfully!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, _this), isSubmitting ? /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            my: 6,\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, _this) : /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 6,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"firstName\",\n                  label: \"First Name\",\n                  value: values.firstName,\n                  error: Boolean(touched.firstName && errors.firstName),\n                  fullWidth: true,\n                  helperText: touched.firstName && errors.firstName,\n                  onBlur: handleBlur,\n                  onChange: handleChange,\n                  variant: \"outlined\",\n                  my: 2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"lastName\",\n                  label: \"Last Name\",\n                  value: values.lastName,\n                  error: Boolean(touched.lastName && errors.lastName),\n                  fullWidth: true,\n                  helperText: touched.lastName && errors.lastName,\n                  onBlur: handleBlur,\n                  onChange: handleChange,\n                  variant: \"outlined\",\n                  my: 2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"email\",\n              label: \"Email\",\n              value: values.email,\n              error: Boolean(touched.email && errors.email),\n              fullWidth: true,\n              helperText: touched.email && errors.email,\n              onBlur: handleBlur,\n              onChange: handleChange,\n              type: \"email\",\n              variant: \"outlined\",\n              my: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"password\",\n              label: \"Password\",\n              value: values.password,\n              error: Boolean(touched.password && errors.password),\n              fullWidth: true,\n              helperText: touched.password && errors.password,\n              onBlur: handleBlur,\n              onChange: handleChange,\n              type: \"password\",\n              variant: \"outlined\",\n              my: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"confirmPassword\",\n              label: \"Confirm password\",\n              value: values.confirmPassword,\n              error: Boolean(touched.confirmPassword && errors.confirmPassword),\n              fullWidth: true,\n              helperText: touched.confirmPassword && errors.confirmPassword,\n              onBlur: handleBlur,\n              onChange: handleChange,\n              type: \"password\",\n              variant: \"outlined\",\n              my: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              mt: 3,\n              children: \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_c = BasicForm;\n\nfunction FormikPage() {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      title: \"Formik\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      gutterBottom: true,\n      display: \"inline\",\n      children: \"Formik\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      \"aria-label\": \"Breadcrumb\",\n      mt: 2,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        component: NavLink,\n        exact: true,\n        to: \"/\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        component: NavLink,\n        exact: true,\n        to: \"/\",\n        children: \"Forms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Formik\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      my: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BasicForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = FormikPage;\nexport default FormikPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BasicForm\");\n$RefreshReg$(_c2, \"FormikPage\");","map":{"version":3,"sources":["/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/src/pages/forms/Formik.js"],"names":["React","Yup","NavLink","Formik","Box","Breadcrumbs","MuiBreadcrumbs","Button","MuiButton","Card","MuiCard","CardContent","CircularProgress","Divider","MuiDivider","Grid","Link","TextField","MuiTextField","Typography","Alert","MuiAlert","spacing","Helmet","styled","timeOut","time","Promise","res","setTimeout","initialValues","firstName","lastName","email","password","confirmPassword","validationSchema","object","shape","string","required","min","max","when","is","val","length","then","oneOf","ref","BasicForm","handleSubmit","values","resetForm","setErrors","setStatus","setSubmitting","sent","submit","message","errors","handleBlur","handleChange","isSubmitting","touched","status","Boolean","FormikPage"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport styled from \"styled-components/macro\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport {\r\n  Box,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Button as MuiButton,\r\n  Card as MuiCard,\r\n  CardContent,\r\n  CircularProgress,\r\n  Divider as MuiDivider,\r\n  Grid,\r\n  Link,\r\n  TextField as MuiTextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Alert as MuiAlert } from \"@material-ui/lab\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Alert = styled(MuiAlert)(spacing);\r\n\r\nconst TextField = styled(MuiTextField)(spacing);\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst timeOut = (time) => new Promise((res) => setTimeout(res, time));\r\n\r\nconst initialValues = {\r\n  firstName: \"Lucy\",\r\n  lastName: \"Lavender\",\r\n  email: \"lucylavender@gmail.com\",\r\n  password: \"mypassword123\",\r\n  confirmPassword: \"mypassword123\",\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  firstName: Yup.string().required(\"Required\"),\r\n  lastName: Yup.string().required(\"Required\"),\r\n  email: Yup.string().email().required(\"Required\"),\r\n  password: Yup.string()\r\n    .min(12, \"Must be at least 12 characters\")\r\n    .max(255)\r\n    .required(\"Required\"),\r\n  confirmPassword: Yup.string().when(\"password\", {\r\n    is: (val) => (val && val.length > 0 ? true : false),\r\n    then: Yup.string().oneOf(\r\n      [Yup.ref(\"password\")],\r\n      \"Both password need to be the same\"\r\n    ),\r\n  }),\r\n});\r\n\r\nfunction BasicForm() {\r\n  const handleSubmit = async (\r\n    values,\r\n    { resetForm, setErrors, setStatus, setSubmitting }\r\n  ) => {\r\n    try {\r\n      await timeOut(1500);\r\n      resetForm();\r\n      setStatus({ sent: true });\r\n      setSubmitting(false);\r\n    } catch (error) {\r\n      setStatus({ sent: false });\r\n      setErrors({ submit: error.message });\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      {({\r\n        errors,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        touched,\r\n        values,\r\n        status,\r\n      }) => (\r\n        <Card mb={6}>\r\n          <CardContent>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Formik\r\n            </Typography>\r\n            <Typography variant=\"body2\" gutterBottom>\r\n              Formik example with Yup validation\r\n            </Typography>\r\n\r\n            {status && status.sent && (\r\n              <Alert severity=\"success\" my={3}>\r\n                [DEMO] Your data has been submitted successfully!\r\n              </Alert>\r\n            )}\r\n\r\n            {isSubmitting ? (\r\n              <Box display=\"flex\" justifyContent=\"center\" my={6}>\r\n                <CircularProgress />\r\n              </Box>\r\n            ) : (\r\n              <form onSubmit={handleSubmit}>\r\n                <Grid container spacing={6}>\r\n                  <Grid item md={6}>\r\n                    <TextField\r\n                      name=\"firstName\"\r\n                      label=\"First Name\"\r\n                      value={values.firstName}\r\n                      error={Boolean(touched.firstName && errors.firstName)}\r\n                      fullWidth\r\n                      helperText={touched.firstName && errors.firstName}\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      variant=\"outlined\"\r\n                      my={2}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={6}>\r\n                    <TextField\r\n                      name=\"lastName\"\r\n                      label=\"Last Name\"\r\n                      value={values.lastName}\r\n                      error={Boolean(touched.lastName && errors.lastName)}\r\n                      fullWidth\r\n                      helperText={touched.lastName && errors.lastName}\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      variant=\"outlined\"\r\n                      my={2}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <TextField\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  value={values.email}\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  variant=\"outlined\"\r\n                  my={2}\r\n                />\r\n\r\n                <TextField\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  value={values.password}\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  variant=\"outlined\"\r\n                  my={2}\r\n                />\r\n\r\n                <TextField\r\n                  name=\"confirmPassword\"\r\n                  label=\"Confirm password\"\r\n                  value={values.confirmPassword}\r\n                  error={Boolean(\r\n                    touched.confirmPassword && errors.confirmPassword\r\n                  )}\r\n                  fullWidth\r\n                  helperText={touched.confirmPassword && errors.confirmPassword}\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  variant=\"outlined\"\r\n                  my={2}\r\n                />\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  mt={3}\r\n                >\r\n                  Save changes\r\n                </Button>\r\n              </form>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nfunction FormikPage() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Formik\" />\r\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n        Formik\r\n      </Typography>\r\n\r\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Dashboard\r\n        </Link>\r\n        <Link component={NavLink} exact to=\"/\">\r\n          Forms\r\n        </Link>\r\n        <Typography>Formik</Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Divider my={6} />\r\n\r\n      <BasicForm />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default FormikPage;\r\n"]},"metadata":{},"sourceType":"module"}