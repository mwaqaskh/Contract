{"ast":null,"code":"import _regeneratorRuntime from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/src/pages/auth/ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { Button, Paper, TextField as MuiTextField, Typography } from \"@material-ui/core\";\nimport { spacing } from \"@material-ui/system\";\nimport { Alert as MuiAlert } from \"@material-ui/lab\";\n\nvar Alert = _styled(MuiAlert).withConfig({\n  displayName: \"ResetPassword__Alert\",\n  componentId: \"sc-1dromjc-0\"\n})(spacing);\n\nvar TextField = _styled(MuiTextField).withConfig({\n  displayName: \"ResetPassword__TextField\",\n  componentId: \"sc-1dromjc-1\"\n})(spacing);\n\nvar Wrapper = _styled(Paper).withConfig({\n  displayName: \"ResetPassword__Wrapper\",\n  componentId: \"sc-1dromjc-2\"\n})([\"padding:\", \"px;\", \"{padding:\", \"px;}\"], function (props) {\n  return props.theme.spacing(6);\n}, function (props) {\n  return props.theme.breakpoints.up(\"md\");\n}, function (props) {\n  return props.theme.spacing(10);\n});\n\nfunction ResetPassword() {\n  _s();\n\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var history = useHistory();\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      title: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"h1\",\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Reset Password \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"h2\",\n      variant: \"body1\",\n      align: \"center\",\n      children: \"Enter your email to reset your password \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\",\n        submit: false\n      },\n      validationSchema: Yup.object().shape({\n        email: Yup.string().email(\"Must be a valid email\").max(255).required(\"Email is required\")\n      }),\n      onSubmit: /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref) {\n          var setErrors, setStatus, setSubmitting, message;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  setErrors = _ref.setErrors, setStatus = _ref.setStatus, setSubmitting = _ref.setSubmitting;\n                  _context.prev = 1;\n                  _context.next = 4;\n                  return dispatch(resetPassword({\n                    email: values.email\n                  }));\n\n                case 4:\n                  history.push(\"/auth/sign-in\");\n                  _context.next = 13;\n                  break;\n\n                case 7:\n                  _context.prev = 7;\n                  _context.t0 = _context[\"catch\"](1);\n                  message = _context.t0.message || \"Something went wrong\";\n                  setStatus({\n                    success: false\n                  });\n                  setErrors({\n                    submit: message\n                  });\n                  setSubmitting(false);\n\n                case 13:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[1, 7]]);\n        }));\n\n        return function (_x, _x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }(),\n      children: [\" \", function (_ref3) {\n        var errors = _ref3.errors,\n            handleBlur = _ref3.handleBlur,\n            handleChange = _ref3.handleChange,\n            handleSubmit = _ref3.handleSubmit,\n            isSubmitting = _ref3.isSubmitting,\n            touched = _ref3.touched,\n            values = _ref3.values;\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          onSubmit: handleSubmit,\n          children: [\" \", errors.submit && /*#__PURE__*/_jsxDEV(Alert, {\n            mt: 2,\n            mb: 1,\n            severity: \"warning\",\n            children: [\" \", errors.submit, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 40\n          }, _this), \" \", /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"email\",\n            name: \"email\",\n            label: \"Email Address\",\n            value: values.email,\n            error: Boolean(touched.email && errors.email),\n            fullWidth: true,\n            helperText: touched.email && errors.email,\n            onBlur: handleBlur,\n            onChange: handleChange,\n            my: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, _this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            disabled: isSubmitting,\n            children: \"Reset password \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 20\n          }, _this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, _this);\n      }, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 14\n  }, this);\n}\n\n_s(ResetPassword, \"FxNkVwM1QRg2/kU3+RDi4ll7EAM=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/Users/muhammadwaqaskhan/Desktop/ContractManagement/contract_managementv1/contract_frontend/src/pages/auth/ResetPassword.js"],"names":["React","useDispatch","useHistory","Helmet","Yup","Formik","Button","Paper","TextField","MuiTextField","Typography","spacing","Alert","MuiAlert","styled","Wrapper","props","theme","breakpoints","up","ResetPassword","dispatch","history","email","submit","object","shape","string","max","required","values","setErrors","setStatus","setSubmitting","resetPassword","push","message","success","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\n\r\n\r\nimport {\r\n    Button,\r\n    Paper,\r\n    TextField as MuiTextField,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Alert as MuiAlert } from \"@material-ui/lab\";\r\n\r\nconst Alert = styled(MuiAlert)(spacing);\r\n\r\nconst TextField = styled(MuiTextField)(spacing);\r\n\r\nconst Wrapper = styled(Paper)\r\n`\r\n  padding: ${(props) => props.theme.spacing(6)}px;\r\n\r\n  ${(props) => props.theme.breakpoints.up(\"md\")} {\r\n    padding: ${(props) => props.theme.spacing(10)}px;\r\n  }\r\n`;\r\n\r\nfunction ResetPassword() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    return ( <\r\n        Wrapper >\r\n        <\r\n        Helmet title = \"Reset Password\" / >\r\n\r\n        <\r\n        Typography component = \"h1\"\r\n        variant = \"h4\"\r\n        align = \"center\"\r\n        gutterBottom >\r\n        Reset Password <\r\n        /Typography> <\r\n        Typography component = \"h2\"\r\n        variant = \"body1\"\r\n        align = \"center\" >\r\n        Enter your email to reset your password <\r\n        /Typography>\r\n\r\n        <\r\n        Formik initialValues = {\r\n            {\r\n                email: \"\",\r\n                submit: false,\r\n            }\r\n        }\r\n        validationSchema = {\r\n            Yup.object().shape({\r\n                email: Yup.string()\r\n                    .email(\"Must be a valid email\")\r\n                    .max(255)\r\n                    .required(\"Email is required\"),\r\n            })\r\n        }\r\n        onSubmit = {\r\n            async(values, { setErrors, setStatus, setSubmitting }) => {\r\n                try {\r\n                    await dispatch(\r\n                        resetPassword({\r\n                            email: values.email,\r\n                        })\r\n                    );\r\n                    history.push(\"/auth/sign-in\");\r\n                } catch (error) {\r\n                    const message = error.message || \"Something went wrong\";\r\n\r\n                    setStatus({ success: false });\r\n                    setErrors({ submit: message });\r\n                    setSubmitting(false);\r\n                }\r\n            }\r\n        } > {\r\n            ({\r\n                errors,\r\n                handleBlur,\r\n                handleChange,\r\n                handleSubmit,\r\n                isSubmitting,\r\n                touched,\r\n                values,\r\n            }) => ( <\r\n                form noValidate onSubmit = { handleSubmit } > {\r\n                    errors.submit && ( <\r\n                        Alert mt = { 2 }\r\n                        mb = { 1 }\r\n                        severity = \"warning\" > { errors.submit } <\r\n                        /Alert>\r\n                    )\r\n                } <\r\n                TextField type = \"email\"\r\n                name = \"email\"\r\n                label = \"Email Address\"\r\n                value = { values.email }\r\n                error = { Boolean(touched.email && errors.email) }\r\n                fullWidth helperText = { touched.email && errors.email }\r\n                onBlur = { handleBlur }\r\n                onChange = { handleChange }\r\n                my = { 3 }\r\n                /> <\r\n                Button type = \"submit\"\r\n                fullWidth variant = \"contained\"\r\n                color = \"primary\"\r\n                disabled = { isSubmitting } >\r\n                Reset password <\r\n                /Button> < /\r\n                form >\r\n            )\r\n        } <\r\n        /Formik> < /\r\n        Wrapper >\r\n    );\r\n}\r\n\r\nexport default ResetPassword;"]},"metadata":{},"sourceType":"module"}